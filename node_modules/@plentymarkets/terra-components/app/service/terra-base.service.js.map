{"version":3,"sources":["app/service/terra-base.service.ts"],"names":[],"mappings":"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","file":"app/service/terra-base.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n    Headers,\n    Http,\n    Response,\n    URLSearchParams\n} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs';\nimport { Exception } from './data/exception.interface';\nimport {\n    isNull,\n    isNullOrUndefined\n} from 'util';\nimport {\n    TerraAlertComponent,\n    TerraBaseParameterInterface,\n    TerraLoadingSpinnerService\n} from '../../';\n\n/**\n * @author mfrank\n */\n@Injectable()\nexport class TerraBaseService\n{\n    public headers:Headers;\n    public url:string;\n\n    private _alert:TerraAlertComponent = TerraAlertComponent.getInstance();\n\n    constructor(private _terraLoadingSpinnerService:TerraLoadingSpinnerService,\n                private _baseHttp:Http,\n                private _baseUrl:string,\n                private _isPlugin?:boolean)\n    {\n        this.headers = new Headers({'Content-Type': 'application/json'});\n        this.setAuthorization();\n        this.url = _baseUrl;\n\n        if(isNullOrUndefined(this._isPlugin))\n        {\n            this._isPlugin = false;\n        }\n    }\n\n    public get http():Http\n    {\n        return this._baseHttp;\n    }\n\n    protected setToHeader(key:string, value:string):void\n    {\n        this.headers.set(key, value);\n    }\n\n    protected deleteFromHeader(key:string):void\n    {\n        this.headers.delete(key);\n    }\n\n    protected setAuthorization():void\n    {\n        if(localStorage.getItem('accessToken'))\n        {\n            this.setToHeader('Authorization', 'Bearer ' + localStorage.getItem('accessToken'));\n        }\n    }\n\n    protected mapRequest(request:Observable<any>, err?:(error:any) => void, isRaw?:boolean):Observable<any>\n    {\n        this._terraLoadingSpinnerService.start();\n\n        let req:Observable<any> = request.map((response:Response) =>\n        {\n            if(response.status === 204)\n            {\n                return response.text();\n            }\n            else if(isRaw)\n            {\n                return response;\n            }\n            else\n            {\n                return response.text() === '' ? {} : response.json();\n            }\n        }).catch((error:any) =>\n        {\n            if(err)\n            {\n                err(error);\n            }\n            else\n            {\n                this.handleException(error);\n            }\n\n            // START Very unclean workaround! Normally we should get a 403 status code as response\n            // when user has no permission\n            let errorMessage:string = this.getErrorMessage(error);\n\n            let missingUserPermissionAlertMessage:string = this.getMissingUserPermissionAlertMessage();\n\n            if(error.status === 403 && this.getErrorClass(error) === 'UIHashExpiredException')\n            {\n                let routeToLoginEvent:CustomEvent = new CustomEvent('CustomEvent');\n\n                routeToLoginEvent.initCustomEvent('routeToLogin', true, true, {});\n\n                this.dispatchEvent(routeToLoginEvent);\n            }\n            else if(error.status === 401 && errorMessage === 'This action is unauthorized.')\n            {\n                if(this._isPlugin)\n                {\n                    this._alert.addAlertForPlugin({\n                        msg:              missingUserPermissionAlertMessage,\n                        type:             'danger',\n                        dismissOnTimeout: 0\n                    });\n                }\n                else\n                {\n                    this._alert.addAlert({\n                        msg:              missingUserPermissionAlertMessage,\n                        type:             'danger',\n                        dismissOnTimeout: 0\n                    });\n                }\n            }\n            // END Very unclean workaround!\n            else if(error.status === 401)\n            {\n                let loginEvent:CustomEvent = new CustomEvent('login');\n                // Workaround for plugins in Angular (loaded via iFrame)\n                this.dispatchEvent(loginEvent);\n            }\n\n            return Observable.throw(error);\n        }).share();\n\n        req.subscribe(() =>\n            {\n                this._terraLoadingSpinnerService.stop();\n            },\n            (error:any) =>\n            {\n                this._terraLoadingSpinnerService.stop();\n            }\n        );\n\n        return req;\n    }\n\n    private dispatchEvent(eventToDispatch:Event | CustomEvent):void\n    {\n        if(!isNullOrUndefined(window.parent))\n        {\n            // workaround for plugins in GWT (loaded via iFrame)\n            if(!isNullOrUndefined(window.parent.window.parent))\n            {\n                window.parent.window.parent.window.dispatchEvent(eventToDispatch);\n            }\n            else\n            {\n                window.parent.window.dispatchEvent(eventToDispatch);\n            }\n        }\n        else\n        {\n            window.dispatchEvent(eventToDispatch);\n        }\n    }\n\n    private getErrorMessage(error:any):string\n    {\n        try\n        {\n            let errorMessage:string;\n\n            if(!isNullOrUndefined(error.json().error))\n            {\n                errorMessage = error.json().error.message;\n            }\n\n            return errorMessage;\n        }\n        catch(e)\n        {\n            return null;\n        }\n    }\n\n    private getErrorClass(error:any):string\n    {\n        try\n        {\n            let errorClass:string = error.json().class;\n            return errorClass;\n        }\n        catch(e)\n        {\n            return null;\n        }\n    }\n\n    /**\n     * Workaround to prevent the injection of the TranslationService in every Service, that extends TerraBaseService\n     * @returns {string}\n     */\n    protected getErrorString():string\n    {\n        // get language from localStorage\n        let langInLocalStorage:string = localStorage.getItem('plentymarkets_lang_');\n\n        // translate error string\n        switch(langInLocalStorage)\n        {\n            case 'de':\n                return 'Fehler';\n            case 'en':\n                return 'Error';\n            default:\n                return 'Error';\n        }\n    }\n\n    /**\n     * Handles exceptions that are returned from the server on a failed rest call\n     * @param exception\n     */\n    private handleException(exception:any):void\n    {\n        // parse response object\n        let response:any = JSON.parse(exception._body);\n\n        // check which exception type has been received\n        if(!isNullOrUndefined(response.error) && !isNullOrUndefined(response.message))\n        {\n            if(this._isPlugin)\n            {\n                this._alert.addAlertForPlugin({\n                    msg:              this.getErrorString() + ': ' + response.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n            else\n            {\n                this._alert.addAlert({\n                    msg:              this.getErrorString() + ': ' + response.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n        }\n        // return if error code is null\n        else if(isNullOrUndefined(response.error) || isNull(response.error.code))\n        {\n            return;\n        }\n        // default exception type\n        else\n        {\n            // parse exception string\n            let error:Exception = response.error;\n\n            // get error code\n            let errorCode:string = error.code ? ' ' + error.code : '';\n\n            if(this._isPlugin)\n            {\n                this._alert.addAlertForPlugin({\n                    msg:              this.getErrorString() + errorCode + ': ' + error.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n            else\n            {\n                this._alert.addAlert({\n                    msg:              this.getErrorString() + errorCode + ': ' + error.message,\n                    type:             'danger',\n                    dismissOnTimeout: 0\n                });\n            }\n        }\n    }\n\n    /**\n     * @param {TerraBaseParameterInterface} params\n     * @returns {URLSearchParams}\n     */\n    protected createUrlSearchParams(params:TerraBaseParameterInterface):URLSearchParams\n    {\n        let searchParams:URLSearchParams = new URLSearchParams();\n\n        if(!isNullOrUndefined(params))\n        {\n            Object.keys(params).map((key:string) =>\n            {\n                if(!isNullOrUndefined(params[key]) && params[key] !== '')\n                {\n                    searchParams.set(key, params[key]);\n                }\n            });\n        }\n\n        return searchParams;\n    }\n\n    private getMissingUserPermissionAlertMessage():string\n    {\n        // START workaround because we do not have a real translation solution in terra components\n        let langInLocalStorage:string = localStorage.getItem('plentymarkets_lang_');\n        if(langInLocalStorage === 'de')\n        {\n            return 'Fehlende Berechtigungen';\n        }\n        else\n        {\n            return 'Missing permissions';\n        }\n        // END workaround\n    }\n}\n"],"sourceRoot":"/source/"}