{"version":3,"sources":["app/components/interactables/draggable.directive.ts"],"names":[],"mappings":"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","file":"app/components/interactables/draggable.directive.js","sourcesContent":["import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport * as Interact from 'interactjs';\nimport { GridOptions } from './gridOptions.interface';\nimport { DraggableOptions } from './draggableOptions.interface';\nimport { RestrictOptions } from './restrictOptions.interface';\nimport { InertiaOptions } from './inertiaOptions.interface';\n\n@Directive({\n    selector: '[terraDraggable]'\n})\nexport class TerraDraggableDirective implements OnChanges\n{\n    @Input('terraDraggable')\n    public options?:DraggableOptions = null;\n\n    @Input('terra-draggable-disabled')\n    public disabled:boolean = false;\n\n    @Input('terra-draggable-grid')\n    public grid:GridOptions = null;\n\n    @Input('terra-draggable-restrict')\n    public restrict:RestrictOptions = null;\n\n    @Input('tera-draggable-inertia')\n    public inertia:boolean | InertiaOptions = false;\n\n    @Input('terra-draggable-data')\n    public dragData:any;\n\n    @Output('terra-draggable-onStart')\n    public onStart:EventEmitter<Interact.InteractEvent> = new EventEmitter<Interact.InteractEvent>();\n\n    @Output('terra-draggable-onMove')\n    public onMove:EventEmitter<Interact.InteractEvent> = new EventEmitter<Interact.InteractEvent>();\n\n    @Output('terra-draggable-onEnd')\n    public onEnd:EventEmitter<Interact.InteractEvent> = new EventEmitter<Interact.InteractEvent>();\n\n    private interactable:Interact.Interactable;\n\n    constructor(private el:ElementRef)\n    {\n        this.init();\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        Object.keys(changes).forEach((changedProperty:string) =>\n        {\n            if(typeof changes[changedProperty].currentValue === 'object')\n            {\n                this.prepareImmutableInput(changedProperty);\n            }\n        });\n\n        this.init();\n    }\n\n    private prepareImmutableInput(input:string):void\n    {\n        if(this[input] && typeof this[input] === 'object')\n        {\n            Object.keys(this[input])\n                  .filter((property:string) =>\n                  {\n                      return this[input].propertyIsEnumerable(property);\n                  })\n                  .forEach((property:string) =>\n                  {\n                      // this[input][\"_\" + property] = this[input][property];\n                      Object.defineProperty(\n                          this[input],\n                          '_' + property,\n                          {\n                              configurable: false,\n                              enumerable:   false,\n                              writable:     true,\n                              value:        this[input][property]\n                          }\n                      );\n\n                      Object.defineProperty(this[input], property,\n                          {\n                              configurable: true,\n                              enumerable:   true,\n                              get:          ():any =>\n                                            {\n                                                return this[input]['_' + property];\n                                            },\n                              set:          (value:any):void =>\n                                            {\n                                                this[input]['_' + property] = value;\n                                                this.init();\n                                            }\n                          }\n                      );\n\n                  });\n        }\n    }\n\n    private init():void\n    {\n        let draggableConfig:any = {\n            max:          (this.options || {}).max || 1,\n            maxPerElemet: (this.options || {}).maxPerElement || Infinity,\n            autoScroll:   (this.options || {}).autoScroll || false,\n            axis:         (this.options || {}).axis || 'xy',\n            manualStart:  (this.options || {}).manualStart || false,\n            inertia:      this.inertia,\n            enabled:      !this.disabled,\n            onstart:      (event:Interact.InteractEvent):void =>\n                          {\n                              this.onStart.emit(event);\n                              event.target.IA_DRAG_DATA = this.dragData;\n                          },\n            onmove:       (event:Interact.InteractEvent):void =>\n                          {\n                              this.onMove.emit(event);\n                              event.target.IA_DRAG_DATA = this.dragData;\n                          },\n            onend:        (event:Interact.InteractEvent):void =>\n                          {\n                              this.onEnd.emit(event);\n                              event.target.IA_DRAG_DATA = null;\n                          },\n        };\n\n        if(this.grid)\n        {\n            draggableConfig.snap = {\n                targets:        [\n                    (x:number, y:number):{ x:number, y:number, range:number } =>\n                    {\n                        return this.handleSnap(x, y);\n                    }\n                ],\n                endOnly:        this.grid && this.grid.endOnly,\n                relativePoints: this.grid.relativePoints\n            };\n        }\n\n        if(this.restrict)\n        {\n            draggableConfig.restrict = this.restrict;\n        }\n\n        if(!this.interactable)\n        {\n            this.interactable = Interact(this.el.nativeElement);\n        }\n\n        this.interactable\n            .set({\n                allowFrom:   (this.options || {}).allowFrom || null,\n                ignoreFrom:  (this.options || {}).ignoreFrom || null,\n                styleCursor: false\n            })\n            .draggable(draggableConfig);\n    }\n\n    private handleSnap(x:number, y:number):{ x:number, y:number, range:number }\n    {\n        if(this.grid)\n        {\n            let offset:Interact.Point = {\n                x: 0,\n                y: 0\n            };\n\n            if(this.grid.offset)\n            {\n                offset = this.grid.offset;\n            }\n\n            return {\n                x:     Math.round((x - offset.x) / this.grid.x) * this.grid.x,\n                y:     Math.round((y - offset.y) / this.grid.y) * this.grid.y,\n                range: (this.grid.range || Infinity)\n            };\n        }\n        else\n        {\n            // Snap is disabled\n            return {\n                x:     x,\n                y:     y,\n                range: 0\n            };\n        }\n    }\n}\n"],"sourceRoot":"/source/"}