{"version":3,"sources":["app/components/buttons/button/terra-button.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAMuB;AACvB,6BAAyC;AAOzC;IAmEI;QAJU,kBAAa,GAAG,IAAI,mBAAY,EAAS,CAAC;QAMhD,IAAI,CAAC,qBAAqB,GAAG,KAAK,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IACpC,CAAC;IAED,uCAAQ,GAAR;QAEI,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,qBAAqB,CAAC;IAC/D,CAAC;IAEO,oCAAK,GAAb,UAAc,KAAW;QAErB,EAAE,CAAA,CAAC,wBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,CAAC,CAC7E,CAAC;YACG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC;IACL,CAAC;IAEO,kDAAmB,GAA3B,UAA4B,KAAgB;QAExC,EAAE,CAAA,CAAC,wBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAC5C,CAAC;YACG,MAAM,CAAC;QACX,CAAC;QAED,IAAI,2BAA2B,GAAU,GAAG,CAAC;QAE7C,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,qBAAqB,CAAC;QAE3D,EAAE,CAAA,CAAC,MAAM,CAAC,UAAU,GAAG,KAAK,CAAC,OAAO,GAAG,2BAA2B,CAAC,CACnE,CAAC;YACG,IAAI,CAAC,wBAAwB,GAAG,MAAM,CAAC;QAC3C,CAAC;QACD,IAAI,CAAC,EAAE,CAAA,CAAC,KAAK,CAAC,OAAO,GAAG,2BAA2B,CAAC,CACpD,CAAC;YACG,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC;QAC5C,CAAC;IACL,CAAC;IA7GQ;QAAR,YAAK,EAAE;;gEAAwB;IAGvB;QAAR,YAAK,EAAE;;kEAA0B;IAKzB;QAAR,YAAK,EAAE;;iEAAyB;IAGxB;QAAR,YAAK,EAAE;;8DAAsB;IAGrB;QAAR,YAAK,EAAE;;8DAAsB;IAGrB;QAAR,YAAK,EAAE;;iEAAyB;IAGxB;QAAR,YAAK,EAAE;;8DAAqB;IAGpB;QAAR,YAAK,EAAE;;2DAAkB;IAIjB;QAAR,YAAK,EAAE;;2DAAkB;IAGjB;QAAR,YAAK,EAAE;;mEAA2B;IAI1B;QAAR,YAAK,EAAE;;+DAAuB;IAGtB;QAAR,YAAK,EAAE;;kEAAyB;IAGxB;QAAR,YAAK,EAAE;;uEAA8B;IAK7B;QAAR,YAAK,EAAE;;+DAAuB;IAKtB;QAAR,YAAK,EAAE;;gEAAwB;IAIvB;QAAR,YAAK,EAAE;;gEAAwB;IAIvB;QAAR,YAAK,EAAE;;6DAAqB;IACpB;QAAR,YAAK,EAAE;;oEAA4B;IAC1B;QAAT,aAAM,EAAE;;+DAA2C;IA/D3C,oBAAoB;QALhC,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,MAAM,EAAI,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;YACpD,QAAQ,EAAE,OAAO,CAAC,+BAA+B,CAAC;SACrD,CAAC;;OACW,oBAAoB,CAiHhC;IAAD,2BAAC;CAjHD,AAiHC,IAAA;AAjHY,oDAAoB","file":"app/components/buttons/button/terra-button.component.js","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector: 'terra-button',\n    styles:   [require('./terra-button.component.scss')],\n    template: require('./terra-button.component.html')\n})\nexport class TerraButtonComponent implements OnInit\n{\n    /** @description If true, the button gets the primary color blue. Default false.*/\n    @Input() inputIsPrimary:boolean;\n\n    /** @description If true, the button gets the secondary color red. Default false.*/\n    @Input() inputIsSecondary:boolean;\n\n    /**\n     * @description If true, the button gets the tertiary color green. Default false.\n     * */\n    @Input() inputIsTertiary:boolean;\n\n    /** @description If true, the button will be small. Default false.*/\n    @Input() inputIsSmall:boolean;\n\n    /** @description If true, the button will be large. Default false.*/\n    @Input() inputIsLarge:boolean;\n\n    /** @description If true, the button will be disabled. Default false.*/\n    @Input() inputIsDisabled:boolean;\n\n    /** @description Set the caption.*/\n    @Input() inputCaption:string;\n\n    /** @description Set an icon (e.g. icon-save).*/\n    @Input() inputIcon:string;\n    /**\n     * @description Set the html native 'type' attribute, e.g., 'submit or 'reset'. Default 'button'.\n     * */\n    @Input() inputType:string;\n\n    /** @description  If true, the button will be aligned to the right side of another element. Default false.*/\n    @Input() inputIsAlignRight:boolean;\n    /**\n     * @description If true, the button will be hidden. Default false.\n     * */\n    @Input() inputIsHidden:boolean;\n\n    /** @description Set the tooltip.*/\n    @Input() inputTooltipText:string;\n\n    /** @description Set the tooltip placement (bottom, top, left, right). Default top.*/\n    @Input() inputTooltipPlacement:string; //top, bottom, left, right\n\n    /**\n     * @description If true, the button color changes to blue and indicates its active state. Default false.\n     * */\n    @Input() inputIsActive:boolean;\n    /**\n     * @description If true, a triangular yellow flag appears at the upper right corner of the button to indicate, e.g., a state in which\n     *     the button should be clicked by the user. Default false.\n     * */\n    @Input() inputIsFlagged:boolean;\n    /**\n     * @description If true, a none-clickable element is set to optically divide a vertical button group. Default false.\n     * */\n    @Input() inputIsDivider:boolean;\n    /**\n     * @description If true, the button will appear as a link which changes to blue on hover. Default false.\n     * */\n    @Input() inputIsLink:boolean;\n    @Input() inputIsHighlighted:boolean;\n    @Output() outputClicked = new EventEmitter<Event>();\n\n    private _currentTooltipPlacement:string;\n\n    constructor()\n    {\n        this.inputTooltipPlacement = 'top';\n        this.inputType = 'button';\n        this.inputIsActive = false;\n        this.inputIsFlagged = false;\n        this.inputIsDivider = false;\n        this.inputIsHidden = false;\n        this.inputIsLink = false;\n        this.inputIsDisabled = false;\n        this.inputIsHighlighted = false;\n    }\n\n    ngOnInit():void\n    {\n        this._currentTooltipPlacement = this.inputTooltipPlacement;\n    }\n\n    private click(event:Event):void\n    {\n        if(isNullOrUndefined(this.inputIsDisabled) || this.inputIsDisabled === false)\n        {\n            this.outputClicked.emit(event);\n        }\n    }\n\n    private setTooltipPlacement(event:MouseEvent):void\n    {\n        if(isNullOrUndefined(this.inputTooltipText))\n        {\n            return;\n        }\n\n        let minimalDistanceToWindowEdge:number = 100;\n\n        this._currentTooltipPlacement = this.inputTooltipPlacement;\n\n        if(window.innerWidth - event.clientX < minimalDistanceToWindowEdge)\n        {\n            this._currentTooltipPlacement = 'left';\n        }\n        else if(event.clientX < minimalDistanceToWindowEdge)\n        {\n            this._currentTooltipPlacement = 'right';\n        }\n    }\n}\n"],"sourceRoot":"/source/"}