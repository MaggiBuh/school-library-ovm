{"version":3,"sources":["app/components/buttons/button-with-options/terra-button-with-options.component.ts"],"names":[],"mappings":"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","file":"app/components/buttons/button-with-options/terra-button-with-options.component.js","sourcesContent":["import {\n    Component,\n    ElementRef,\n    Input,\n    OnInit,\n    ViewChild\n} from '@angular/core';\nimport { TerraButtonInterface } from '../button/data/terra-button.interface';\nimport { isNullOrUndefined } from 'util';\nimport { TerraButtonComponent } from '../button/terra-button.component';\nimport { TerraTextAlignEnum } from '../../tables/data-table/cell/terra-text-align.enum';\nimport { TerraPlacementEnum } from '../../../../';\n\n@Component({\n    selector: 'terra-button-with-options',\n    template: require('./terra-button-with-options.component.html'),\n    styles:   [require('./terra-button-with-options.component.scss')]\n})\nexport class TerraButtonWithOptionsComponent implements OnInit\n{\n    // terra button inputs\n    /**\n     * @description Set the caption.\n     */\n    @Input()\n    public inputCaption:string;\n\n    /**\n     * @description Set an icon (e.g. icon-save).\n     */\n    @Input()\n    public inputIcon:string;\n\n    /**\n     * @description If true, the button gets the primary color blue. Default false.\n     */\n    @Input()\n    public inputIsPrimary:boolean;\n\n    /**\n     * @description If true, the button gets the secondary color red. Default false.\n     */\n    @Input()\n    public inputIsSecondary:boolean;\n\n    /**\n     * @description If true, the button gets the tertiary color green. Default false.\n     */\n    @Input()\n    public inputIsTertiary:boolean;\n\n    /**\n     * @description If true, the button will be disabled. Default false.\n     */\n    @Input()\n    public inputIsDisabled:boolean;\n\n    /**\n     * @description Set the tooltip.\n     */\n    @Input()\n    public inputTooltipText:string;\n    /**\n     * @description Set the tooltip placement (bottom, top, left, right). Default top.\n     */\n    @Input()\n    public inputTooltipPlacement:TerraPlacementEnum; // top, bottom, left, right\n\n    // new inputs\n    /**\n     * @description Set an array of buttons which will be shown as a menu with options. Use the TerraButtonInterface to set the buttons of\n     *     the menu.\n     */\n    @Input()\n    public inputOptions:Array<TerraButtonInterface>;\n\n    /**\n     * @description Set the alignment of the context menu. Default right.\n     */\n    @Input()\n    public inputOptionsAlignment:TerraTextAlignEnum;\n\n    // view children\n    @ViewChild(TerraButtonComponent) private toggleButton:TerraButtonComponent;\n\n    private _optionsToggle:boolean;\n    private _alignRight:boolean;\n    private clickListener:(event:Event) => void;\n\n    constructor(private elementRef:ElementRef)\n    {\n        // define click listener\n        this.clickListener = (event:Event):void =>\n        {\n            // check if it has been clicked elsewhere\n            if(!this.elementRef.nativeElement.contains(event.target))\n            {\n                this._optionsToggle = false;\n            }\n        };\n\n        this.inputOptionsAlignment = TerraTextAlignEnum.RIGHT;\n        this._alignRight = true;\n    }\n\n    public ngOnInit():void\n    {\n        // handle undefined input error\n        if(isNullOrUndefined(this.inputOptions))\n        {\n            this.inputOptions = [];\n        }\n\n        switch(this.inputOptionsAlignment)\n        {\n            case TerraTextAlignEnum.LEFT:\n            {\n                this._alignRight = false;\n                break;\n            }\n            case TerraTextAlignEnum.RIGHT:\n            {\n                this._alignRight = true;\n                break;\n            }\n            case TerraTextAlignEnum.CENTER:\n            {\n                this._alignRight = false;\n                break;\n            }\n        }\n    }\n\n    private optionsClick(option:TerraButtonInterface):void\n    {\n        if(!option.isDisabled)\n        {\n            // execute click function of the option\n            option.clickFunction();\n\n            // close dropdown\n            this.toggleOptions();\n        }\n    }\n\n    private toggleOptions():void\n    {\n        if(!this._optionsToggle)\n        {\n            document.addEventListener('click', this.clickListener);\n        }\n        else\n        {\n            document.removeEventListener('click', this.clickListener);\n        }\n\n        this._optionsToggle = !this._optionsToggle;\n    }\n}\n"],"sourceRoot":"/source/"}