"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var terra_node_tree_config_1 = require("../data/terra-node-tree.config");
var TerraNodeTreeComponentExample = /** @class */ (function () {
    function TerraNodeTreeComponentExample(_nodeTreeConfig) {
        this._nodeTreeConfig = _nodeTreeConfig;
        this.nodeCounter = 0;
    }
    TerraNodeTreeComponentExample.prototype.ngOnInit = function () {
        this.createCompleteTree();
    };
    TerraNodeTreeComponentExample.prototype.addNode = function () {
        this._nodeTreeConfig.addNode({
            name: 'Test' + this.nodeCounter,
            id: this.nodeCounter,
            isVisible: true
        });
        this.nodeCounter++;
    };
    TerraNodeTreeComponentExample.prototype.addExistingNode = function () {
        this._nodeTreeConfig.addNode({
            name: 'Test' + this.nodeCounter,
            id: 0
        });
    };
    TerraNodeTreeComponentExample.prototype.findNodeById = function (id) {
        var node = this._nodeTreeConfig.findNodeById(id);
        alert(node.name);
    };
    TerraNodeTreeComponentExample.prototype.deleteNodeById = function (id) {
        this._nodeTreeConfig.removeNodeById(id);
    };
    TerraNodeTreeComponentExample.prototype.getSelectedNode = function () {
        console.log(this._nodeTreeConfig.currentSelectedNode);
    };
    TerraNodeTreeComponentExample.prototype.deleteSelectedNode = function () {
        this._nodeTreeConfig.removeNode(this._nodeTreeConfig.currentSelectedNode);
    };
    TerraNodeTreeComponentExample.prototype.updateSelectedNode = function () {
        this._nodeTreeConfig.currentSelectedNode.name = 'Terra';
    };
    TerraNodeTreeComponentExample.prototype.updateNodeById = function (id) {
        this._nodeTreeConfig.updateNodeById(id, {
            id: id,
            name: 'Terra'
        });
    };
    TerraNodeTreeComponentExample.prototype.addChildToNodeById = function (id) {
        this._nodeTreeConfig.addChildToNodeById(id, {
            id: 133,
            name: 'myNewNode',
            isVisible: true
        });
    };
    TerraNodeTreeComponentExample.prototype.setSelectedNode = function (id) {
        this._nodeTreeConfig.setCurrentSelectedNodeById(id);
    };
    TerraNodeTreeComponentExample.prototype.createCompleteTree = function () {
        this._nodeTreeConfig.list = [{
                id: 11,
                name: 'Test1',
                isVisible: true,
                children: [
                    {
                        id: 12,
                        name: 'Child1',
                        isVisible: true,
                        children: [{
                                id: 13,
                                name: 'Subchild1',
                                isVisible: true,
                                onClick: function () {
                                    alert('Hello i am a click function');
                                }
                            }]
                    }
                ]
            },
            {
                id: 14,
                name: 'Test2',
                isVisible: true,
            },
            {
                id: 15,
                name: 'Test3',
                isVisible: true,
            }];
    };
    TerraNodeTreeComponentExample.prototype.createTreeWithIcons = function () {
        this._nodeTreeConfig.list = [{
                id: 1,
                name: 'Ebay',
                icon: 'icon-ebay',
                isVisible: true,
                children: [{
                        id: 2,
                        name: 'Child1',
                        isVisible: true,
                        children: [{
                                id: 3,
                                name: 'Subchild1',
                                isVisible: true,
                                onClick: function () {
                                    alert('Hello i am a click function');
                                }
                            }]
                    }
                ]
            },
            {
                id: 4,
                name: 'Ceres',
                isVisible: true,
                icon: 'icon-backend_ceres'
            },
            {
                id: 5,
                name: 'Amazon Prime',
                isVisible: true,
                icon: 'icon-ship_amaz_prime'
            }];
    };
    TerraNodeTreeComponentExample = __decorate([
        core_1.Component({
            selector: 'terra-node-tree-example',
            template: require('./terra-node-tree.component.example.html'),
            styles: [require('./terra-node-tree.component.example.scss')],
            providers: [terra_node_tree_config_1.TerraNodeTreeConfig]
        }),
        __metadata("design:paramtypes", [terra_node_tree_config_1.TerraNodeTreeConfig])
    ], TerraNodeTreeComponentExample);
    return TerraNodeTreeComponentExample;
}());
exports.TerraNodeTreeComponentExample = TerraNodeTreeComponentExample;

//# sourceMappingURL=terra-node-tree.component.example.js.map
