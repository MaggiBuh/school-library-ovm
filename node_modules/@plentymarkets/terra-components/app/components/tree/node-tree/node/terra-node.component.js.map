{"version":3,"sources":["app/components/tree/node-tree/node/terra-node.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAIuB;AAEvB,yEAAqE;AACrE,6BAAyC;AAOzC;IALA;QAoBY,sBAAiB,GAAU,OAAO,CAAC;IAyC/C,CAAC;IAvCU,qCAAQ,GAAf;QAEI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAC3B,CAAC;YACG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACxC,CAAC;QACD,IAAI,CACJ,CAAC;YACG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QAC3C,CAAC;QACD,EAAE,CAAA,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CACnC,CAAC;YACG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;QAC7D,CAAC;IAEL,CAAC;IAED,wBAAwB;IACd,wCAAW,GAArB,UAAsB,KAAW;QAE7B,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,iCAAiC;QACjC,EAAE,CAAA,CAAC,CAAC,wBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAC9C,CAAC;YACG,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEnD,IAAI,CAAC,WAAW,CAAC,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC;IAC1D,CAAC;IAES,4CAAe,GAAzB,UAA0B,KAAW;QAEjC,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvD,CAAC;IAjDD;QADC,YAAK,EAAE;;yDAC+B;IAMvC;QADC,YAAK,EAAE;kCACW,4CAAmB;2DAAI;IAZjC,kBAAkB;QAL9B,gBAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,MAAM,EAAI,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;YAClD,QAAQ,EAAE,OAAO,CAAC,6BAA6B,CAAC;SACnD,CAAC;OACW,kBAAkB,CAwD9B;IAAD,yBAAC;CAxDD,AAwDC,IAAA;AAxDY,gDAAkB","file":"app/components/tree/node-tree/node/terra-node.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnInit\n} from '@angular/core';\nimport { TerraNodeInterface } from '../data/terra-node.interface';\nimport { TerraNodeTreeConfig } from '../data/terra-node-tree.config';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector: 'terra-node',\n    styles:   [require('./terra-node.component.scss')],\n    template: require('./terra-node.component.html')\n})\nexport class TerraNodeComponent<D> implements OnInit\n{\n    /**\n     * @description The node interface.\n     */\n    @Input()\n    public inputNode:TerraNodeInterface<D>;\n\n    /**\n     * @description The config to handle actions on tree or node.\n     */\n    @Input()\n    public inputConfig:TerraNodeTreeConfig<D>;\n\n    private _tooltip:string;\n    private _tooltipPlacement:string = 'right';\n\n    public ngOnInit():void\n    {\n        if(!this.inputNode.tooltip)\n        {\n            this._tooltip = this.inputNode.name;\n        }\n        else\n        {\n            this._tooltip = this.inputNode.tooltip;\n        }\n        if(this.inputNode.tooltipPlacement)\n        {\n            this._tooltipPlacement = this.inputNode.tooltipPlacement;\n        }\n\n    }\n\n    // handle the node click\n    protected onNodeClick(event:Event):void\n    {\n        event.stopPropagation();\n\n        // check if click function is set\n        if(!isNullOrUndefined(this.inputNode.onClick))\n        {\n            this.inputNode.onClick();\n        }\n\n        this.inputConfig.handleLazyLoading(this.inputNode);\n\n        this.inputConfig.currentSelectedNode = this.inputNode;\n    }\n\n    protected handleIconClick(event:Event):void\n    {\n        event.stopPropagation();\n\n        this.inputConfig.handleLazyLoading(this.inputNode);\n    }\n}\n"],"sourceRoot":"/source/"}