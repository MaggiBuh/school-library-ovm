{"version":3,"sources":["app/components/tree/node-tree/terra-node-tree.component.ts"],"names":[],"mappings":"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","file":"app/components/tree/node-tree/terra-node-tree.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport { TerraNodeTreeConfig } from './data/terra-node-tree.config';\nimport { isNullOrUndefined } from 'util';\nimport { TerraNodeInterface } from './data/terra-node.interface';\nimport { TranslationService } from 'angular-l10n';\n\n@Component({\n    selector: 'terra-node-tree',\n    styles:   [require('./terra-node-tree.component.scss')],\n    template: require('./terra-node-tree.component.html')\n})\nexport class TerraNodeTreeComponent<D> implements OnDestroy, OnInit\n{\n    /**\n     * @description The config to handle actions on tree or node.\n     */\n    @Input()\n    public inputConfig:TerraNodeTreeConfig<D>;\n\n    /**\n     * @description Shows the search box above the tree.\n     */\n    @Input()\n    public inputShowSearch:boolean;\n\n    /**\n     * @description Disables or enables the System Tree\n     */\n    @Input()\n    public isTreeDisabled:boolean;\n\n    protected _searchValue:string;\n\n    constructor(private _translation:TranslationService)\n    {\n    }\n\n    public ngOnInit():void\n    {\n        this.handleVisibility(this.inputConfig.list);\n    }\n\n    private handleVisibility(nodeList:Array<TerraNodeInterface<D>>):void\n    {\n        nodeList.forEach((node:TerraNodeInterface<D>) =>\n        {\n\n            if(node.isVisible)\n            {\n                node.defaultVisibility = true;\n            }\n            else\n            {\n                node.defaultVisibility = false;\n            }\n\n            if(!isNullOrUndefined(node.children))\n            {\n                this.handleVisibility(node.children);\n            }\n        });\n    }\n\n    private handleDefaultVisibility(nodeList:Array<TerraNodeInterface<D>>):void\n    {\n        nodeList.forEach((node:TerraNodeInterface<D>) =>\n        {\n\n            if(node.defaultVisibility)\n            {\n                node.isVisible = true;\n            }\n            else\n            {\n                node.isVisible = false;\n            }\n\n            if(!isNullOrUndefined(node.children))\n            {\n                this.handleDefaultVisibility(node.children);\n            }\n        });\n    }\n\n    public ngOnDestroy():void\n    {\n        this.inputConfig.reset();\n    }\n\n    protected onChange():void\n    {\n        if(this._searchValue.length >= 3)\n        {\n            this.inputConfig.toggleVisiblityForAllChildren(this.inputConfig.list, false);\n\n            this.recursiveCheckList(this.inputConfig.list);\n        }\n        else\n        {\n            this.handleDefaultVisibility(this.inputConfig.list);\n            this.inputConfig.closeAllNodes();\n        }\n    }\n\n    private recursiveCheckList(list:Array<TerraNodeInterface<D>>):void\n    {\n        list.forEach((node:TerraNodeInterface<D>) =>\n        {\n            if(this._searchValue.includes(' '))\n            {\n                this._searchValue.split(' ').forEach((word:string) =>\n                {\n                    this.handleSearch(node, word);\n                });\n            }\n            else\n            {\n                this.handleSearch(node, this._searchValue);\n            }\n\n            if(!isNullOrUndefined(node.children))\n            {\n                this.recursiveCheckList(node.children);\n            }\n        });\n    }\n\n    private handleSearch(node:TerraNodeInterface<D>, value:string):void\n    {\n        let tags:Array<string> = node.tags;\n        if(!isNullOrUndefined(tags))\n        {\n            let tagMatchFound:boolean = false;\n            tags.forEach((tag:string) =>\n            {\n                if(tag.toUpperCase().includes(value.toUpperCase()))\n                {\n                    tagMatchFound = true;\n                    return;\n                }\n            });\n\n            if(tagMatchFound)\n            {\n                this.handleNodeVisibility(node);\n            }\n        }\n\n        let name:string = this._translation.translate(node.name);\n\n        let suggestion:string = name.toUpperCase();\n\n        // check if search string is included in the given suggestion\n        if(suggestion.includes(value.toUpperCase()))\n        {\n            this.handleNodeVisibility(node);\n        }\n    }\n\n    private handleNodeVisibility(node:TerraNodeInterface<D>):void\n    {\n        if(!node.defaultVisibility)\n        {\n            return;\n        }\n\n        node.isVisible = true;\n        this.inputConfig.toggleOpenParent(node, true);\n\n        if(!node.hasLoaded && !isNullOrUndefined(node.onLazyLoad))\n        {\n            this.inputConfig.handleLazyLoading(node);\n        }\n\n        if(!isNullOrUndefined(node.children))\n        {\n            this.inputConfig.toggleVisiblityForAllChildren(node.children, true);\n        }\n\n        if(!isNullOrUndefined(node.parent))\n        {\n            if(!node.parent.hasLoaded && !isNullOrUndefined(node.parent.onLazyLoad))\n            {\n                this.inputConfig.handleLazyLoading(node.parent);\n            }\n            this.inputConfig.toggleVisibilityForAllParents(node.parent, true);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}