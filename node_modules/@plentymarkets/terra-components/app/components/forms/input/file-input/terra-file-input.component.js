"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var angular_l10n_1 = require("angular-l10n");
var util_1 = require("util");
var forms_1 = require("@angular/forms");
var terra_input_component_1 = require("../terra-input.component");
var _1 = require("../../../../../");
var nextId = 0;
var TerraFileInputComponent = /** @class */ (function (_super) {
    __extends(TerraFileInputComponent, _super);
    function TerraFileInputComponent(translation, _frontendStorageService) {
        var _this = _super.call(this, _1.TerraRegex.MIXED) || this;
        _this.translation = translation;
        _this._frontendStorageService = _frontendStorageService;
        _this.inputShowPreview = false;
        _this.inputAllowedExtensions = [];
        _this.inputAllowFolders = true;
        _this._translationPrefix = 'terraFileInput';
        // generate the id of the input instance
        _this._id = "file-input_#" + nextId++;
        _this.primaryOverlayButton = {
            icon: 'icon-success',
            caption: _this.translation.translate(_this._translationPrefix + '.choose'),
            isDisabled: true,
            clickFunction: function () {
                _this.value = _this._selectedObjectUrl;
                _this.overlay.hideOverlay();
            }
        };
        _this.secondaryOverlayButton = {
            icon: 'icon-close',
            caption: _this.translation.translate(_this._translationPrefix + '.cancel'),
            isDisabled: false,
            clickFunction: function () {
                _this._selectedObjectUrl = _this.value;
                _this.overlay.hideOverlay();
            }
        };
        return _this;
    }
    TerraFileInputComponent_1 = TerraFileInputComponent;
    Object.defineProperty(TerraFileInputComponent.prototype, "inputStorageServices", {
        get: function () {
            return this._storageServices || [this._frontendStorageService];
        },
        set: function (services) {
            this._storageServices = services;
        },
        enumerable: true,
        configurable: true
    });
    TerraFileInputComponent.prototype.onSelectedObjectChange = function (selectedObject) {
        if (util_1.isNullOrUndefined(selectedObject) || selectedObject.isDirectory) {
            this.primaryOverlayButton.isDisabled = true;
        }
        else {
            this.primaryOverlayButton.isDisabled = false;
            this._selectedObjectUrl = selectedObject.publicUrl;
        }
    };
    TerraFileInputComponent.prototype.onPreviewClicked = function () {
        if (this.isWebImage(this.value)) {
            this.previewOverlay.showOverlay();
        }
    };
    TerraFileInputComponent.prototype.showFileBrowser = function () {
        this.overlay.showOverlay();
    };
    TerraFileInputComponent.prototype.getIconClass = function (filename) {
        if (util_1.isNullOrUndefined(filename)) {
            return '';
        }
        if (_1.PathHelper.isDirectory(filename)) {
            return 'icon-folder';
        }
        return _1.FileType.mapIconClass(filename);
    };
    TerraFileInputComponent.prototype.isWebImage = function (filename) {
        return !util_1.isNullOrUndefined(filename) && _1.FileType.isWebImage(filename);
    };
    TerraFileInputComponent.prototype.getFilename = function (path) {
        if (util_1.isNullOrUndefined(path)) {
            return '';
        }
        return _1.PathHelper.basename(path);
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraFileInputComponent.prototype, "inputShowPreview", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array)
    ], TerraFileInputComponent.prototype, "inputAllowedExtensions", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Boolean)
    ], TerraFileInputComponent.prototype, "inputAllowFolders", void 0);
    __decorate([
        core_1.Input(),
        __metadata("design:type", Array),
        __metadata("design:paramtypes", [Array])
    ], TerraFileInputComponent.prototype, "inputStorageServices", null);
    __decorate([
        core_1.ViewChild('overlay'),
        __metadata("design:type", _1.TerraOverlayComponent)
    ], TerraFileInputComponent.prototype, "overlay", void 0);
    __decorate([
        core_1.ViewChild('previewOverlay'),
        __metadata("design:type", _1.TerraOverlayComponent)
    ], TerraFileInputComponent.prototype, "previewOverlay", void 0);
    TerraFileInputComponent = TerraFileInputComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-file-input',
            template: require('./terra-file-input.component.html'),
            styles: [require('./terra-file-input.component.scss')],
            providers: [
                {
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: core_1.forwardRef(function () { return TerraFileInputComponent_1; }),
                    multi: true
                }
            ]
        }),
        __metadata("design:paramtypes", [angular_l10n_1.TranslationService, _1.TerraFrontendStorageService])
    ], TerraFileInputComponent);
    return TerraFileInputComponent;
    var TerraFileInputComponent_1;
}(terra_input_component_1.TerraInputComponent));
exports.TerraFileInputComponent = TerraFileInputComponent;

//# sourceMappingURL=terra-file-input.component.js.map
