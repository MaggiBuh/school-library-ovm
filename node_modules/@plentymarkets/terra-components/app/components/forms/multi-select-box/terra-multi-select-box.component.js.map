{"version":3,"sources":["app/components/forms/multi-select-box/terra-multi-select-box.component.ts"],"names":[],"mappings":"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","file":"app/components/forms/multi-select-box/terra-multi-select-box.component.js","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { TerraMultiSelectBoxValueInterface } from './data/terra-multi-select-box-value.interface';\nimport { TerraCheckboxComponent } from '../checkbox/terra-checkbox.component';\nimport { TranslationService } from 'angular-l10n';\n\n/** @deprecated - please use `TerraMultiCheckBoxComponent` instead */\n@Component({\n    selector: 'terra-multi-select-box',\n    styles:   [require('./terra-multi-select-box.component.scss')],\n    template: require('./terra-multi-select-box.component.html')\n})\nexport class TerraMultiSelectBoxComponent implements OnInit, OnChanges\n{\n    @ViewChild('viewChildHeaderCheckbox') viewChildHeaderCheckbox:TerraCheckboxComponent;\n    @Input() inputIsDisabled:boolean;\n    @Input() inputIsError:boolean;\n    @Input() inputValueList:Array<TerraMultiSelectBoxValueInterface>;\n    @Input() inputName:string;\n    @Input() inputIsRequired:boolean;\n    @Output() inputSelectedValueListChange = new EventEmitter<Array<any>>();\n\n    @Input()\n    set inputSelectedValueList(value:Array<any>)\n    {\n        if(value !== undefined && value != null)\n        {\n            let valueCopy = value.slice(0);\n\n            if(valueCopy.length == 0)\n            {\n                this.viewChildHeaderCheckbox.value = false;\n            }\n            else if(this._selectedValueList.length > 0 && this.inputValueList.length == this._selectedValueList.length)\n            {\n                this.viewChildHeaderCheckbox.value = true;\n            }\n            else\n            {\n                this.viewChildHeaderCheckbox.isIndeterminate = true;\n            }\n\n            for(let i = this._selectedValueList.length; i >= 0; i--)\n            {\n                this._selectedValueList.pop();\n            }\n\n            this.inputValueList\n                .forEach((item:TerraMultiSelectBoxValueInterface) =>\n                {\n                    item.selected = false;\n\n                    valueCopy.forEach((key:any) =>\n                    {\n                        if(item.value == key)\n                        {\n                            item.selected = true;\n                            this._selectedValueList.push(item.value);\n                            return;\n                        }\n                    });\n                });\n\n            setTimeout(() => this.inputSelectedValueListChange.emit(this._selectedValueList), 0);\n        }\n    }\n\n    private _selectedValueList:Array<any> = [];\n    private _isInit:boolean;\n\n    private _langPrefix:string = 'terraMultiSelectBox';\n\n    constructor(public translation:TranslationService)\n    {\n        console.warn('TerraMultiSelectBoxComponent is deprecated. It will be removed in one of the upcoming releases' +\n                     'Please use TerraMultiCheckBoxComponent instead.');\n    }\n\n    ngOnInit()\n    {\n        if(!this.inputName)\n        {\n            this.inputName = this.translation.translate(this._langPrefix + '.selectAll');\n\n            //this is necessary for language switch\n            this.translation.translationChanged.subscribe(() =>\n            {\n                this.inputName = this.translation.translate(this._langPrefix + '.selectAll');\n            });\n        }\n\n        this._isInit = true;\n    }\n\n    /**\n     *\n     * @param changes\n     */\n    ngOnChanges(changes:SimpleChanges)\n    {\n        if(this._isInit == true && changes['inputValueList'] && changes['inputValueList'].currentValue.length > 0)\n        {\n            let temp:Array<any> = [];\n\n            changes['inputValueList'].currentValue.forEach((item:TerraMultiSelectBoxValueInterface) =>\n            {\n                if(item.selected && item.selected == true)\n                {\n                    temp.push(item.value);\n                }\n            });\n\n            setTimeout(() => this.inputSelectedValueList = temp, 0);\n        }\n    }\n\n    private primaryClicked():void\n    {\n        this.onHeaderCheckboxChange(!this.viewChildHeaderCheckbox.value);\n    }\n\n    private onHeaderCheckboxChange(isChecked:boolean):void\n    {\n        this.viewChildHeaderCheckbox.value = isChecked;\n\n        this.inputValueList.forEach((value:TerraMultiSelectBoxValueInterface) =>\n        {\n            this.changeValueState(isChecked, value);\n        });\n\n        this.inputSelectedValueList = this._selectedValueList;\n    }\n\n    private onValueCheckboxChange(isChecked:boolean, value:TerraMultiSelectBoxValueInterface):void\n    {\n        this.changeValueState(isChecked, value);\n        this.inputSelectedValueList = this._selectedValueList;\n\n        if(this._selectedValueList.length == 0)\n        {\n            this.viewChildHeaderCheckbox.value = false;\n        }\n        else if(this._selectedValueList.length > 0 && this.inputValueList.length == this._selectedValueList.length)\n        {\n            this.viewChildHeaderCheckbox.value = true;\n        }\n        else\n        {\n            this.viewChildHeaderCheckbox.isIndeterminate = true;\n        }\n    }\n\n    private changeValueState(isChecked:boolean, valueToChange:TerraMultiSelectBoxValueInterface):void\n    {\n        valueToChange.selected = isChecked;\n\n        let valueFound:boolean = false;\n\n        let index = this._selectedValueList.indexOf(valueToChange.value);\n\n        //check if value exists in list\n        if(index == -1)\n        {\n            valueFound = false;\n        }\n        else\n        {\n            valueFound = this._selectedValueList[index] != null;\n        }\n\n        if(valueToChange.selected)\n        {\n            if(!valueFound)\n            {\n                this._selectedValueList.push(valueToChange.value);\n            }\n        }\n        else\n        {\n            let index = this._selectedValueList.indexOf(valueToChange.value);\n\n            this._selectedValueList.splice(index, 1);\n        }\n    }\n\n    private extractSelectedValues(valueList:Array<TerraMultiSelectBoxValueInterface>)\n    {\n        let result:Array<any> = [];\n\n        if(valueList && valueList.length > 0)\n        {\n            valueList.forEach((item:TerraMultiSelectBoxValueInterface) =>\n            {\n                if(item.selected == true)\n                {\n                    result.push(item.value);\n                }\n            });\n        }\n\n        return result;\n    }\n}\n"],"sourceRoot":"/source/"}