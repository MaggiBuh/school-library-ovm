{"version":3,"sources":["app/components/forms/radio-button/terra-radio-button.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAKuB;AACvB,wCAGwB;AAExB;;GAEG;AAaH;IAsCI;QARQ,sBAAiB,GAAc;QAEvC,CAAC,CAAC;QAEM,qBAAgB,GAAmB,UAAC,CAAC;QAE7C,CAAC,CAAC;QAIE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IACjC,CAAC;kCA1CQ,yBAAyB;IAQ3B,2CAAO,GAAd;QAEI,EAAE,CAAA,CAAC,IAAI,CAAC,eAAe,CAAC,CACxB,CAAC;YACG,MAAM,CAAC;QACX,CAAC;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,KAAK,CAAC,CAC7D,CAAC;YACG,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;QAC3B,CAAC;QACD,IAAI,CACJ,CAAC;YACG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;QACjC,CAAC;QAED,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAkBM,8CAAU,GAAjB,UAAkB,KAAS;QAEvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAEM,oDAAgB,GAAvB,UAAwB,EAAM;QAE1B,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;IAC/B,CAAC;IAEM,qDAAiB,GAAxB,UAAyB,EAAM;QAE3B,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAvDQ;QAAR,YAAK,EAAE;;mEAAqB;IACpB;QAAR,YAAK,EAAE;;iEAAsC;IACrC;QAAR,YAAK,EAAE;;sEAAyB;IACxB;QAAR,YAAK,EAAE;;yEAA4B;IAGpC;QADC,mBAAY,CAAC,OAAO,CAAC;;;;4DAmBrB;IA1BQ,yBAAyB;QAZrC,gBAAS,CAAC;YACP,QAAQ,EAAG,oBAAoB;YAC/B,QAAQ,EAAG,OAAO,CAAC,qCAAqC,CAAC;YACzD,MAAM,EAAK,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;YAC3D,SAAS,EAAE;gBACP;oBACI,OAAO,EAAM,yBAAiB;oBAC9B,WAAW,EAAE,iBAAU,CAAC,cAAM,OAAA,2BAAyB,EAAzB,CAAyB,CAAC;oBACxD,KAAK,EAAQ,IAAI;iBACpB;aACJ;SACJ,CAAC;;OACW,yBAAyB,CA0DrC;IAAD,gCAAC;;CA1DD,AA0DC,IAAA;AA1DY,8DAAyB","file":"app/components/forms/radio-button/terra-radio-button.component.js","sourcesContent":["import {\n    Component,\n    forwardRef,\n    HostListener,\n    Input\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\n/**\n * @author mfrank\n */\n@Component({\n    selector:  'terra-radio-button',\n    template:  require('./terra-radio-button.component.html'),\n    styles:    [require('./terra-radio-button.component.scss')],\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraRadioButtonComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraRadioButtonComponent implements ControlValueAccessor\n{\n    @Input() inputCaption:string;\n    @Input() inputValue:string | number | boolean;\n    @Input() inputIsDisabled:boolean;\n    @Input() inputIsUncheckable:boolean;\n\n    @HostListener('click')\n    public onClick():void\n    {\n        if(this.inputIsDisabled)\n        {\n            return;\n        }\n\n        if(this.inputIsUncheckable && this.inputValue === this.value)\n        {\n            this.value = undefined;\n        }\n        else\n        {\n            this.value = this.inputValue;\n        }\n\n        this.onTouchedCallback();\n        this.onChangeCallback(this.value);\n    }\n\n    public value:any;\n\n    private onTouchedCallback:() => void = () =>\n    {\n    };\n\n    private onChangeCallback:(_:any) => void = (_) =>\n    {\n    };\n\n    constructor()\n    {\n        this.inputIsUncheckable = false;\n        this.inputIsDisabled = false;\n    }\n\n    public writeValue(value:any):void\n    {\n        this.value = value;\n    }\n\n    public registerOnChange(fn:any):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:any):void\n    {\n        this.onTouchedCallback = fn;\n    }\n}\n"],"sourceRoot":"/source/"}