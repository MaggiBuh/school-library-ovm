{"version":3,"sources":["app/components/forms/dynamic-form/terra-dynamic-form.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAMuB;AACvB,6BAAyC;AACzC,+FAA0F;AAE1F,uGAAkG;AAClG,mFAA+E;AAE/E,IAAY,gBAMX;AAND,WAAY,gBAAgB;IAExB,+BAAW,CAAA;IACX,iCAAa,CAAA;IACb,+BAAW,CAAA;IACX,qCAAiB,CAAA;AACrB,CAAC,EANW,gBAAgB,GAAhB,wBAAgB,KAAhB,wBAAgB,QAM3B;AASD;;GAEG;AAMH;IAOI,mCAAoB,wBAAqD,EACrD,eAAuC;QADvC,6BAAwB,GAAxB,wBAAwB,CAA6B;QACrD,oBAAe,GAAf,eAAe,CAAwB;QAEvD,IAAI,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;QAC9C,IAAI,CAAC,kBAAkB,GAAG;YACtB,KAAK,EAAO,EAAE;YACd,UAAU,EAAE,IAAI;YAChB,MAAM,EAAM,EAAE;SACjB,CAAC;IACN,CAAC;IAEM,4CAAQ,GAAf;QAEI,EAAE,CAAA,CAAC,wBAAiB,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,wBAAiB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CACzF,CAAC;YACG,OAAO,CAAC,KAAK,CAAC,qDAAqD,CAAC,CAAC;QACzE,CAAC;QACD,IAAI,CACJ,CAAC;YACG,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACpE,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,GAAG,IAAI,CAAC,wBAAwB,CAAC;QACpF,CAAC;IACL,CAAC;IAEM,+CAAW,GAAlB,UAAmB,OAAqB;QAEpC,EAAE,CAAA,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAC9B,CAAC;YACG,IAAI,CAAC,wBAAwB,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;IAES,4CAAQ,GAAlB;QAEI,EAAE,CAAA,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CACxD,CAAC;YACG,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC/F,CAAC;QACD,IAAI,CACJ,CAAC;YACG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,gBAAgB,EAAE,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,CAAC;QAC5I,CAAC;IACL,CAAC;IAES,gDAAY,GAAtB;QAEI,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAE,CAAC;IAC9C,CAAC;IApDQ;QAAR,YAAK,EAAE;kCAA2B,uEAAgC;yEAAM;IAChE;QAAR,YAAK,EAAE;kCAAwB,KAAK;sEAA0B;IACtD;QAAR,YAAK,EAAE;;wEAAiC;IAChC;QAAR,YAAK,EAAE;;yEAAyD;IALxD,yBAAyB;QALrC,gBAAS,CAAC;YACP,QAAQ,EAAG,oBAAoB;YAC/B,QAAQ,EAAG,OAAO,CAAC,qCAAqC,CAAC;YACzD,SAAS,EAAE,CAAC,oDAAuB,CAAC;SACvC,CAAC;yCAQ+C,+DAA4B;YACrC,oDAAuB;OARlD,yBAAyB,CAuDrC;IAAD,gCAAC;CAvDD,AAuDC,IAAA;AAvDY,8DAAyB","file":"app/components/forms/dynamic-form/terra-dynamic-form.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n    SimpleChanges\n} from '@angular/core';\nimport { isNullOrUndefined } from 'util';\nimport { TerraFormFieldControlService } from './service/terra-form-field-control.service';\nimport { TerraFormFieldBase } from './data/terra-form-field-base';\nimport { TerraDynamicFormFunctionsHandler } from './handler/terra-dynamic-form-functions.handler';\nimport { TerraDynamicFormService } from './service/terra-dynamic-form.service';\n\nexport enum TerraHtmlMethods\n{\n    GET = 'get',\n    POST = 'post',\n    PUT = 'put',\n    DELETE = 'delete'\n}\n\nexport interface TerraDynamicFormRequestParams\n{\n    route:string;\n    htmlMethod:TerraHtmlMethods;\n    params?:{};\n}\n\n/**\n * @author mfrank\n */\n@Component({\n    selector:  'terra-dynamic-form',\n    template:  require('./terra-dynamic-form.component.html'),\n    providers: [TerraDynamicFormService]\n})\nexport class TerraDynamicFormComponent implements OnInit, OnChanges\n{\n    @Input() public inputFormFunctions:TerraDynamicFormFunctionsHandler<any>;\n    @Input() public inputFormFields:Array<TerraFormFieldBase<any>>;\n    @Input() public inputPortletStyle:string;\n    @Input() public inputRequestParams:TerraDynamicFormRequestParams;\n\n    constructor(private _formFieldControlService:TerraFormFieldControlService,\n                private _dynamicService:TerraDynamicFormService)\n    {\n        this.inputPortletStyle = 'col-xs-12 col-md-4';\n        this.inputRequestParams = {\n            route:      '',\n            htmlMethod: null,\n            params:     {}\n        };\n    }\n\n    public ngOnInit():void\n    {\n        if(isNullOrUndefined(this.inputFormFields) || isNullOrUndefined(this.inputFormFunctions))\n        {\n            console.error('inputFormFields and inputFormFunctions must be set.');\n        }\n        else\n        {\n            this._formFieldControlService.createFormGroup(this.inputFormFields);\n            this.inputFormFunctions.formFieldControlService = this._formFieldControlService;\n        }\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes['inputFormFields'])\n        {\n            this._formFieldControlService.createFormGroup(this.inputFormFields);\n        }\n    }\n\n    protected validate():void\n    {\n        if(this._formFieldControlService.dynamicFormGroup.valid)\n        {\n            this.inputFormFunctions.saveCallback(this._formFieldControlService.dynamicFormGroup.value);\n        }\n        else\n        {\n            this.inputFormFunctions.errorCallback(this._formFieldControlService.dynamicFormGroup, this._formFieldControlService.translationMapping);\n        }\n    }\n\n    protected onResetClick():void\n    {\n        this._formFieldControlService.resetForm();\n    }\n}\n"],"sourceRoot":"/source/"}