{"version":3,"sources":["app/components/forms/select-box/terra-select-box.component.ts"],"names":[],"mappings":"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","file":"app/components/forms/select-box/terra-select-box.component.js","sourcesContent":["import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\nimport { TerraSelectBoxValueInterface } from './data/terra-select-box.interface';\nimport {\n    FormControl,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector:  'terra-select-box',\n    styles:    [require('./terra-select-box.component.scss')],\n    template:  require('./terra-select-box.component.html'),\n    providers: [\n        {\n            provide:     NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TerraSelectBoxComponent),\n            multi:       true\n        }\n    ]\n})\nexport class TerraSelectBoxComponent implements OnInit, OnChanges\n{\n    @Input() inputName:string;\n    @Input() inputIsRequired:boolean;\n    @Input() inputIsDisabled:boolean;\n    @Input() inputIsSmall:boolean;\n    @Input() inputOpenOnTop:boolean;\n    @Input() inputTooltipText:string;\n    @Input() inputTooltipPlacement:string;\n    @Input() inputListBoxValues:Array<TerraSelectBoxValueInterface>;\n    @Output() outputValueChanged = new EventEmitter<TerraSelectBoxValueInterface>();\n    @Output() inputSelectedValueChange = new EventEmitter<TerraSelectBoxValueInterface>();\n\n    private clickListener:(event:Event) => void;\n\n    /**\n     * @deprecated\n     * @param value\n     */\n    @Input()\n    set inputSelectedValue(value:number | string)\n    {\n        console.warn('inputSelectedValue is deprecated. It will be removed in one of the upcoming releases. Please use ngModel instead.');\n        if(value !== undefined && value != null)\n        {\n            this.inputListBoxValues\n                .forEach((item:TerraSelectBoxValueInterface) =>\n                {\n                    if(item.value == value)\n                    {\n                        this._selectedValue = item;\n                    }\n                });\n\n            this.inputSelectedValueChange.emit(this._selectedValue.value);\n        }\n    }\n\n    get inputSelectedValue():number | string\n    {\n        return this._selectedValue.value;\n    }\n\n    public isValid:boolean;\n    private _value:number | string;\n    private _selectedValue:TerraSelectBoxValueInterface;\n    private _toggleOpen:boolean;\n    private _hasLabel:boolean;\n    private _isInit:boolean;\n\n    /**\n     *\n     * @param elementRef\n     */\n    constructor(private elementRef:ElementRef)\n    {\n        this.clickListener = (event) =>\n        {\n            this.clickedOutside(event);\n        };\n\n        this._isInit = false;\n        this.inputTooltipPlacement = 'top';\n        this.inputIsSmall = false;\n        this.inputOpenOnTop = false;\n    }\n\n    ngOnInit()\n    {\n        this.isValid = true;\n        this._toggleOpen = false;\n        this._hasLabel = this.inputName != null;\n        this._isInit = true;\n    }\n\n    /**\n     *\n     * @param changes\n     */\n    ngOnChanges(changes:SimpleChanges)\n    {\n        if(this._isInit == true\n           && changes[\"inputListBoxValues\"]\n           && changes[\"inputListBoxValues\"].currentValue.length > 0\n           && !this.inputListBoxValues.find((x) => this._selectedValue === x))\n        {\n            this.select(this.inputListBoxValues[0]);\n        }\n    }\n\n    /**\n     *\n     * Two way data binding by ngModel\n     */\n    private onTouchedCallback:() => void = () =>\n    {\n    };\n\n    private onChangeCallback:(_:any) => void = (_) =>\n    {\n    };\n\n    public registerOnChange(fn:any):void\n    {\n        this.onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:any):void\n    {\n        this.onTouchedCallback = fn;\n    }\n\n    public writeValue(value:any):void\n    {\n        this.value = value;\n    }\n\n    public get value():any\n    {\n        return this._value;\n    }\n\n    public set value(value:any)\n    {\n        this._value = value;\n\n        if(!isNullOrUndefined(value))\n        {\n            this.inputListBoxValues\n                .forEach((item:TerraSelectBoxValueInterface) =>\n                {\n                    if(item.value == value)\n                    {\n                        this._selectedValue = item;\n                    }\n                });\n        }\n        else if(!isNullOrUndefined(this.inputListBoxValues[0]))\n        {\n            this._selectedValue = this.inputListBoxValues[0];\n            this.onTouchedCallback();\n            this.onChangeCallback(this.inputListBoxValues[0].value);\n        }\n    }\n\n    private set toggleOpen(value)\n    {\n        if(this._toggleOpen !== value && value == true)\n        {\n            document.addEventListener('click', this.clickListener, true);\n        }\n        else if(this._toggleOpen !== value && value == false)\n        {\n            document.removeEventListener('click', this.clickListener);\n        }\n\n        this._toggleOpen = value;\n    }\n\n    private get toggleOpen():boolean\n    {\n        return this._toggleOpen;\n    }\n\n    /**\n     *\n     * @param event\n     */\n    private clickedOutside(event:Event):void\n    {\n        if(!this.elementRef.nativeElement.contains(event.target))\n        {\n            this.toggleOpen = false;\n        }\n    }\n\n    private onClick(evt:Event):void\n    {\n        evt.stopPropagation(); // prevents the click listener on the document to be fired right after\n        this.toggleOpen = !this.toggleOpen;\n    }\n\n    /**\n     *\n     * @param value\n     */\n    private select(value:TerraSelectBoxValueInterface):void\n    {\n        this._selectedValue = value;\n        this.onTouchedCallback();\n        this.onChangeCallback(value.value);\n        this.outputValueChanged.emit(value);\n    }\n\n    public validate(formControl:FormControl):void\n    {\n        if(formControl.valid)\n        {\n            this.isValid = true;\n        }\n        else\n        {\n            if(!this.inputIsDisabled)\n            {\n                this.isValid = false;\n\n                //if(this.inputIsRequired && (isNullOrUndefined(this.value) || this.value.length == 0))\n                //{\n                //    let emptyMessage:string;\n                //\n                //    if(!this.inputEmptyMessage || this.inputEmptyMessage.length == 0)\n                //    {\n                //        ////TODO i18n\n                //        //emptyMessage = 'Mach eine Eingabe!';\n                //\n                //    }\n                //    else\n                //    {\n                //        emptyMessage = this.inputEmptyMessage;\n                //\n                //        this._alert.addAlert({\n                //                                 msg:              emptyMessage,\n                //                                 closable:         true,\n                //                                 type:             'danger',\n                //                                 dismissOnTimeout: 0\n                //                             });\n                //    }\n                //}\n                //else if(!isNullOrUndefined(this.value) && this.value.length > 0)\n                //{\n                //    let invalidMessage:string;\n                //\n                //    if(!this.inputInvalidMessage || this.inputInvalidMessage.length == 0)\n                //    {\n                //        ////TODO i18n\n                //        //invalidMessage = 'Eingabe ungültig!';\n                //    }\n                //    else\n                //    {\n                //        invalidMessage = this.inputInvalidMessage;\n                //\n                //        this._alert.addAlert({\n                //                                 msg:              invalidMessage,\n                //                                 closable:         true,\n                //                                 type:             'danger',\n                //                                 dismissOnTimeout: 0\n                //                             });\n                //    }\n                //}\n            }\n        }\n    }\n}\n"],"sourceRoot":"/source/"}