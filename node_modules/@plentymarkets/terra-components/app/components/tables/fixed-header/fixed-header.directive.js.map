{"version":3,"sources":["app/components/tables/fixed-header/fixed-header.directive.ts"],"names":[],"mappings":"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","file":"app/components/tables/fixed-header/fixed-header.directive.js","sourcesContent":["import {\n    AfterViewChecked,\n    AfterViewInit,\n    Directive,\n    ElementRef,\n    forwardRef,\n    Inject\n} from '@angular/core';\nimport { TerraSimpleTableComponent } from '../../../../';\n\nconst FIXED_CLASS:string = 'fixedHeader';\n\n@Directive({\n    selector: 'terra-simple-table[fixedHeader]'\n})\nexport class FixedHeaderDirective implements AfterViewInit, AfterViewChecked\n{\n    private _tableElement:HTMLTableElement;\n    private _tableHeadElement:HTMLTableSectionElement;\n    private _tableBodyElement:HTMLTableSectionElement;\n    private _columnWidths:Array<number> = [];\n\n    constructor(private _elementRef:ElementRef,\n                @Inject(forwardRef(() => TerraSimpleTableComponent)) private _tableComponent:any)\n    {\n    }\n\n    public ngAfterViewInit():void\n    {\n        this._tableElement = this._elementRef.nativeElement.querySelector('table');\n        this._tableHeadElement = this._tableElement.querySelector('thead');\n        this._tableBodyElement = this._tableElement.querySelector('tbody');\n    }\n\n    public ngAfterViewChecked():void\n    {\n        // check if table has at least one row\n        if(this._tableElement && this._tableBodyElement.querySelector('tr:first-child'))\n        {\n            this.updateColumnWidths();\n        }\n    }\n\n    private updateColumnWidths():void\n    {\n\n        let rows:NodeListOf<HTMLElement> = this._tableBodyElement.querySelectorAll('tr');\n        let headerCol:HTMLElement;\n        let bodyCol:HTMLElement;\n\n        // adjust difference between header width and body width\n        let headerWidth:number = this._tableHeadElement.getBoundingClientRect().width;\n        let bodyWidth:number = this._tableBodyElement.getBoundingClientRect().width;\n        this._tableHeadElement.style.paddingRight = (headerWidth - bodyWidth) + 'px';\n\n        // assign column widths\n        this.getColumnWidths()\n            .forEach((width:number, index:number) =>\n            {\n                headerCol = <HTMLElement> this._tableHeadElement.querySelector('tr th:nth-child(' + (index + 1) + ')');\n                if(headerCol)\n                {\n                    headerCol.style.width = width + '%';\n                }\n\n                for(let i:number = 0; i < rows.length; i++)\n                {\n                    bodyCol = <HTMLElement> rows.item(i).querySelector('tr td:nth-child(' + (index + 1) + ')');\n                    if(bodyCol)\n                    {\n                        bodyCol.style.width = width + '%';\n                    }\n                }\n\n            });\n    }\n\n    private getColumnWidths():Array<number>\n    {\n        let firstRow:HTMLElement = <HTMLElement> this._tableBodyElement.querySelector('tr:first-child');\n        if(firstRow)\n        {\n            let rowWidth:number = firstRow.getBoundingClientRect().width;\n            let columns:NodeListOf<HTMLElement> = firstRow.querySelectorAll('td');\n            if(rowWidth > 0 && columns.length !== this._columnWidths.length)\n            {\n                this._columnWidths = [];\n                for(let i:number = 0; i < columns.length; i++)\n                {\n                    this._columnWidths.push(\n                        (columns.item(i).getBoundingClientRect().width / rowWidth) * 100\n                    );\n                }\n            }\n        }\n\n        return this._columnWidths;\n    }\n}\n"],"sourceRoot":"/source/"}