"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var terra_simple_table_component_1 = require("../simple/terra-simple-table.component");
var FIXED_CLASS = "fixed-header";
var FixedHeaderDirective = /** @class */ (function () {
    function FixedHeaderDirective(_elementRef, _tableComponent) {
        this._elementRef = _elementRef;
        this._tableComponent = _tableComponent;
        this._columnWidths = [];
    }
    FixedHeaderDirective.prototype.ngAfterViewInit = function () {
        this._tableElement = this._elementRef.nativeElement.querySelector('table');
        this._tableHeadElement = this._tableElement.querySelector('thead');
        this._tableBodyElement = this._tableElement.querySelector('tbody');
    };
    FixedHeaderDirective.prototype.ngAfterViewChecked = function () {
        // check if table has at least one row
        if (this._tableElement && this._tableBodyElement.querySelector('tr:first-child')) {
            this.updateColumnWidths();
        }
    };
    FixedHeaderDirective.prototype.updateColumnWidths = function () {
        var _this = this;
        var rows = this._tableBodyElement.querySelectorAll('tr');
        var headerCol;
        var bodyCol;
        // adjust difference between header width and body width
        var headerWidth = this._tableHeadElement.getBoundingClientRect().width;
        var bodyWidth = this._tableBodyElement.getBoundingClientRect().width;
        this._tableHeadElement.style.paddingRight = (headerWidth - bodyWidth) + 'px';
        // assign column widths
        this.getColumnWidths()
            .forEach(function (width, index) {
            headerCol = _this._tableHeadElement.querySelector('tr th:nth-child(' + (index + 1) + ')');
            if (headerCol) {
                headerCol.style.width = width + '%';
            }
            for (var i = 0; i < rows.length; i++) {
                bodyCol = rows.item(i).querySelector('tr td:nth-child(' + (index + 1) + ')');
                if (bodyCol) {
                    bodyCol.style.width = width + '%';
                }
            }
        });
    };
    FixedHeaderDirective.prototype.getColumnWidths = function () {
        var firstRow = this._tableBodyElement.querySelector('tr:first-child');
        if (firstRow) {
            var rowWidth = firstRow.getBoundingClientRect().width;
            var columns = firstRow.querySelectorAll('td');
            if (rowWidth > 0 && columns.length !== this._columnWidths.length) {
                this._columnWidths = [];
                for (var i = 0; i < columns.length; i++) {
                    this._columnWidths.push((columns.item(i).getBoundingClientRect().width / rowWidth) * 100);
                }
            }
        }
        return this._columnWidths;
    };
    FixedHeaderDirective = __decorate([
        core_1.Directive({
            selector: 'terra-simple-table[fixed-header]'
        }),
        __param(1, core_1.Inject(core_1.forwardRef(function () { return terra_simple_table_component_1.TerraSimpleTableComponent; }))),
        __metadata("design:paramtypes", [core_1.ElementRef, Object])
    ], FixedHeaderDirective);
    return FixedHeaderDirective;
}());
exports.FixedHeaderDirective = FixedHeaderDirective;

//# sourceMappingURL=fixed-header.directive.js.map
