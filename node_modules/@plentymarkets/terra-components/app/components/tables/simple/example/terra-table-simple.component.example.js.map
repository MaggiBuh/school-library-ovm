{"version":3,"sources":["app/components/tables/simple/example/terra-table-simple.component.example.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAKuB;AACvB,gFAA4E;AAY5E;IAQI,0CAAmB,gBAAiC;QAH5C,gBAAW,GAA8C,EAAE,CAAC;QAC5D,aAAQ,GAA4C,EAAE,CAAC;QAI3D,iFAAiF;QACjF,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC9C,CAAC;IAED,mDAAQ,GAAR;QAEI,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACzB,CAAC;YACG,IAAI,IAAI,GAAuC;gBAC3C,OAAO,EAAE,SAAS,GAAG,CAAC;gBACtB,KAAK,EAAI,KAAK;aACjB,CAAC;YAEF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACjB,OAAO,EAAE,SAAS;YAClB,KAAK,EAAI,KAAK;SACjB,CAAC,CAAC;QAEH,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAC1B,CAAC;YACG,IAAI,QAAQ,GAAwC,EAAE,CAAC;YAEvD,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EACzB,CAAC;gBACG,IAAI,IAAI,GAAiC;oBACrC,OAAO,EAAE,KAAK,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC;oBACpC,IAAI,EAAK,uBAAuB;iBACnC,CAAC;gBAEF,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;YAED,IAAI,UAAU,GAA+B,EAAE,CAAC;YAEhD,UAAU,CAAC,IAAI,CAAC;gBACZ,OAAO,EAAQ,OAAO;gBACtB,aAAa,EAAE;oBAEI,KAAK,CAAC,MAAM,CAAC,CAAA;gBACjB,CAAC;aACnB,CAAC,CAAC;YAEH,IAAI,UAAU,GAAiC;gBAC3C,UAAU,EAAE,UAAU;aACzB,CAAC;YAEF,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAE1B,IAAI,GAAG,GAAqC;gBACxC,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;aACxB,CAAC;YAEF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,sBAAW,wDAAU;aAArB;YAEI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAW,qDAAO;aAAlB;YAEI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;QACzB,CAAC;;;OAAA;IA5EmB;QAAnB,gBAAS,CAAC,OAAO,CAAC;kCAAO,wDAAyB;mEAAM;IAFhD,gCAAgC;QAL5C,gBAAS,CAAC;YACP,QAAQ,EAAE,4BAA4B;YACtC,QAAQ,EAAE,OAAO,CAAC,6CAA6C,CAAC;YAChE,MAAM,EAAI,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;SACrE,CAAC;yCASsC,uBAAgB;OAR3C,gCAAgC,CA+E5C;IAAD,uCAAC;CA/ED,AA+EC,IAAA;AA/EY,4EAAgC","file":"app/components/tables/simple/example/terra-table-simple.component.example.js","sourcesContent":["import {\n    Component,\n    OnInit,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { TerraSimpleTableComponent } from '../terra-simple-table.component';\nimport { TerraSimpleTableHeaderCellInterface } from '../cell/terra-simple-table-header-cell.interface';\nimport { TerraSimpleTableRowInterface } from '../row/terra-simple-table-row.interface';\nimport { TerraSimpleTableCellInterface } from '../cell/terra-simple-table-cell.interface';\nimport { TerraButtonInterface } from '../../../buttons/button/data/terra-button.interface';\n\n\n@Component({\n    selector: 'terra-simple-table-example',\n    template: require('./terra-simple-table.component.example.html'),\n    styles:   [require('./terra-simple-table.component.example.scss')],\n})\nexport class TerraSimpleTableComponentExample implements OnInit\n{\n    @ViewChild('table') table:TerraSimpleTableComponent<any>;\n\n    private _viewContainerRef:ViewContainerRef;\n    private _headerList:Array<TerraSimpleTableHeaderCellInterface> = [];\n    private _rowList:Array<TerraSimpleTableRowInterface<any>> = [];\n\n    public constructor(viewContainerRef:ViewContainerRef)\n    {\n        // You need this small hack in order to catch application root view container ref\n        this._viewContainerRef = viewContainerRef;\n    }\n\n    ngOnInit()\n    {\n        for(let x = 0; x < 5; x++)\n        {\n            let cell:TerraSimpleTableHeaderCellInterface = {\n                caption: \"header \" + x,\n                width:   \"100\",\n            };\n\n            this.headerList.push(cell);\n        }\n\n        this.headerList.push({\n            caption: \"buttons\",\n            width:   \"100\"\n        });\n\n        for(let i = 1; i < 10; i++)\n        {\n            let cellList:Array<TerraSimpleTableCellInterface> = [];\n\n            for(let j = 0; j < 5; j++)\n            {\n                let cell:TerraSimpleTableCellInterface = {\n                    caption: \"row\" + i + \"testcell \" + j,\n                    icon:    \"icon-referrer_backend\"\n                };\n\n                cellList.push(cell);\n            }\n\n            let buttonList:Array<TerraButtonInterface> = [];\n\n            buttonList.push({\n                caption:       \"hallo\",\n                clickFunction: () =>\n                               {\n                                   alert(\"test\")\n                               }\n            });\n\n            let buttonCell:TerraSimpleTableCellInterface = {\n                buttonList: buttonList\n            };\n\n            cellList.push(buttonCell);\n\n            let row:TerraSimpleTableRowInterface<any> = {\n                cellList: cellList,\n                disabled: i % 3 === 0\n            };\n\n            this.rowList.push(row);\n        }\n    }\n\n    public get headerList():Array<TerraSimpleTableHeaderCellInterface>\n    {\n        return this._headerList;\n    }\n\n    public get rowList():Array<TerraSimpleTableRowInterface<any>>\n    {\n        return this._rowList;\n    }\n}\n"],"sourceRoot":"/source/"}