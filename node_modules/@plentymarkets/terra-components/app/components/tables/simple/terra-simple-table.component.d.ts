import { ElementRef, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { TerraSimpleTableHeaderCellInterface } from './cell/terra-simple-table-header-cell.interface';
import { TerraSimpleTableRowInterface } from './row/terra-simple-table-row.interface';
import { TerraCheckboxComponent } from '../../forms/checkbox/terra-checkbox.component';
export declare class TerraSimpleTableComponent<D> implements OnChanges {
    private _elementRef;
    inputHeaderList: Array<TerraSimpleTableHeaderCellInterface>;
    inputRowList: Array<TerraSimpleTableRowInterface<D>>;
    inputUseHighlighting: boolean;
    inputIsStriped: boolean;
    inputHasCheckboxes: boolean;
    inputEnableHotkeys: boolean;
    inputHighlightedRow: TerraSimpleTableRowInterface<D>;
    outputHeaderCheckBoxChanged: EventEmitter<boolean>;
    outputRowCheckBoxChanged: EventEmitter<TerraSimpleTableRowInterface<D>>;
    outputRowClicked: EventEmitter<TerraSimpleTableRowInterface<D>>;
    outputHighlightedRowChange: EventEmitter<TerraSimpleTableRowInterface<D>>;
    outputSelectedRowsChange: EventEmitter<Array<TerraSimpleTableRowInterface<D>>>;
    viewChildHeaderCheckbox: TerraCheckboxComponent;
    scrollContainer: ElementRef;
    private _headerCheckbox;
    private _selectedRowList;
    onRowListChange: EventEmitter<void>;
    constructor(_elementRef: ElementRef);
    ngOnChanges(changes: SimpleChanges): void;
    /**
     * @deprecated
     *
     * @returns {Array<TerraSimpleTableHeaderCellInterface>}
     */
    /**
     * @deprecated
     *
     * @param value
     */
    headerList: Array<TerraSimpleTableHeaderCellInterface>;
    /**
     * @deprecated
     *
     * @returns {Array<TerraSimpleTableRowInterface>}
     */
    rowList: Array<TerraSimpleTableRowInterface<D>>;
    private checkTooltipPlacement(placement);
    private onHeaderCheckboxChange();
    private onRowCheckboxChange(row);
    private checkHeaderCheckbox();
    private uncheckHeaderCheckbox();
    private setHeaderCheckboxIndeterminate();
    private updateHeaderCheckboxState();
    private selectRow(row);
    private deselectRow(row);
    private selectAllRows();
    private resetSelectedRows();
    private isSelectedRow(row);
    private onCheckboxClick(event);
    private onRowClick(row);
    private onKeydown(event);
    private highlightSiblingRow(nextSibling);
}
