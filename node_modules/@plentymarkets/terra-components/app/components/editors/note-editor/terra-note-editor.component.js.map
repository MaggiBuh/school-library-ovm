{"version":3,"sources":["app/components/editors/note-editor/terra-note-editor.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAMuB;AACvB,6CAAkD;AAClD,wCAGwB;AAiBxB;IAYI,kCAAoB,WAA8B;QAA9B,gBAAW,GAAX,WAAW,CAAmB;QAN3C,kBAAa,GAAwB,IAAI,mBAAY,EAAE,CAAC;QA+DvD,sBAAiB,GAAc,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;QACpD,uBAAkB,GAAc,cAAW,OAAA,SAAS,EAAT,CAAS,CAAC;QAxDzD,yBAAyB;QACzB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,4BAA4B,CAAC,CAAC;QAE7E,IAAI,CAAC,QAAQ,GAAG;YACZ,OAAO,EAAE;gBACL,CAAC,MAAM;oBACN,QAAQ;oBACR,WAAW;oBACX,QAAQ,CAAC;gBAEV,CAAC,EAAC,MAAM,EAAE,SAAS,EAAC;oBACnB,EAAC,MAAM,EAAE,QAAQ,EAAC,CAAC;gBACpB,CAAC,EAAC,QAAQ,EAAE,KAAK,EAAC;oBACjB,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC;gBAErB,CAAC;wBACG,QAAQ,EAAE,CAAC,CAAC;4BACD,CAAC;4BACD,CAAC;4BACD,CAAC;4BACD,CAAC;4BACD,CAAC;4BACD,KAAK,CAAC;qBACpB,CAAC;gBAEF,CAAC,MAAM;oBACN,OAAO,CAAC,CAAyB,wBAAwB;aAC7D;SACJ,CAAC;IACN,CAAC;iCA3CQ,wBAAwB;IA6C1B,2CAAQ,GAAf;QAEI,oDAAoD;QACpD,EAAE,CAAA,CAAC,IAAI,CAAC,gBAAgB,CAAC,CACzB,CAAC;YACG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC9C,CAAC;IACL,CAAC;IAEM,6CAAU,GAAjB,UAAkB,KAAY;QAE1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAEM,mDAAgB,GAAvB,UAAwB,EAAa;QAEjC,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;IAChC,CAAC;IAEM,oDAAiB,GAAxB,UAAyB,EAAa;QAElC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACjC,CAAC;IAhED;QADC,YAAK,EAAE;;sEACuB;IAG/B;QADC,aAAM,EAAE;kCACY,mBAAY;mEAA8B;IANtD,wBAAwB;QAfpC,gBAAS,CAAC;YACP,QAAQ,EAAG,mBAAmB;YAC9B,QAAQ,EAAG,OAAO,CAAC,oCAAoC,CAAC;YACxD,MAAM,EAAK;gBACP,OAAO,CAAC,oCAAoC,CAAC;gBAC7C,OAAO,CAAC,6BAA6B,CAAC;gBACtC,OAAO,CAAC,2BAA2B,CAAC;gBACpC,OAAO,CAAC,yCAAyC,CAAC,CAAC,QAAQ,EAAE;aAChE;YACD,SAAS,EAAE,CAAC;oBACR,OAAO,EAAM,yBAAiB;oBAC9B,WAAW,EAAE,0BAAwB;oBACrC,KAAK,EAAQ,IAAI;iBACpB,CAAC;SACL,CAAC;yCAakC,iCAAkB;OAZzC,wBAAwB,CAuEpC;IAAD,+BAAC;;CAvED,AAuEC,IAAA;AAvEY,4DAAwB","file":"app/components/editors/note-editor/terra-note-editor.component.js","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output\n} from '@angular/core';\nimport { TranslationService } from 'angular-l10n';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\n\n@Component({\n    selector:  'terra-note-editor',\n    template:  require('./terra-note-editor.component.html'),\n    styles:    [\n        require('./terra-note-editor.component.scss'),\n        require('quill/dist/quill.bubble.css'),\n        require('quill/dist/quill.snow.css'),\n        require('./terra-note-editor.component.glob.scss').toString()\n    ],\n    providers: [{\n        provide:     NG_VALUE_ACCESSOR,\n        useExisting: TerraNoteEditorComponent,\n        multi:       true\n    }]\n})\nexport class TerraNoteEditorComponent implements OnInit, ControlValueAccessor\n{\n    @Input()\n    public inputPlaceholder:string;\n\n    @Output()\n    public ngModelChange:EventEmitter<string> = new EventEmitter();\n\n    private _placeholder:string;\n    private _value:string;\n    private _modules:{ [index:string]:Object };\n\n    constructor(private translation:TranslationService)\n    {\n        // initialize placeholder\n        this._placeholder = this.translation.translate('terraNoteEditor.insertText');\n\n        this._modules = {\n            toolbar: [\n                ['bold',\n                 'italic',\n                 'underline',\n                 'strike'],        // toggled buttons\n\n                [{'list': 'ordered'},\n                 {'list': 'bullet'}],\n                [{'script': 'sub'},\n                 {'script': 'super'}],      // superscript/subscript\n\n                [{\n                    'header': [1,\n                               2,\n                               3,\n                               4,\n                               5,\n                               6,\n                               false]\n                }],\n\n                ['link',\n                 'image']                         // link and image, video\n            ]\n        };\n    }\n\n    public ngOnInit():void\n    {\n        // overwrite default placeholder if input is defined\n        if(this.inputPlaceholder)\n        {\n            this._placeholder = this.inputPlaceholder;\n        }\n    }\n\n    public writeValue(value:string):void\n    {\n        this._value = value;\n    }\n\n    public registerOnChange(fn:() => void):void\n    {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn:() => void):void\n    {\n        this._onTouchedCallback = fn;\n    }\n\n    private _onChangeCallback:() => void = ():void => undefined;\n    private _onTouchedCallback:() => void = ():void => undefined;\n}\n"],"sourceRoot":"/source/"}