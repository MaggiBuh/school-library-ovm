"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var angular_l10n_1 = require("angular-l10n");
var forms_1 = require("@angular/forms");
var TerraNoteEditorComponent = /** @class */ (function () {
    function TerraNoteEditorComponent(translation) {
        this.translation = translation;
        this.ngModelChange = new core_1.EventEmitter();
        this._onChangeCallback = function () { return undefined; };
        this._onTouchedCallback = function () { return undefined; };
        // initialize placeholder
        this._placeholder = this.translation.translate('terraNoteEditor.insertText');
        this._modules = {
            toolbar: [
                ['bold',
                    'italic',
                    'underline',
                    'strike'],
                [{ 'list': 'ordered' },
                    { 'list': 'bullet' }],
                [{ 'script': 'sub' },
                    { 'script': 'super' }],
                [{
                        'header': [1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            false]
                    }],
                ['link',
                    'image'] // link and image, video
            ]
        };
    }
    TerraNoteEditorComponent_1 = TerraNoteEditorComponent;
    TerraNoteEditorComponent.prototype.ngOnInit = function () {
        // overwrite default placeholder if input is defined
        if (this.inputPlaceholder) {
            this._placeholder = this.inputPlaceholder;
        }
    };
    TerraNoteEditorComponent.prototype.writeValue = function (value) {
        this._value = value;
    };
    TerraNoteEditorComponent.prototype.registerOnChange = function (fn) {
        this._onChangeCallback = fn;
    };
    TerraNoteEditorComponent.prototype.registerOnTouched = function (fn) {
        this._onTouchedCallback = fn;
    };
    __decorate([
        core_1.Input(),
        __metadata("design:type", String)
    ], TerraNoteEditorComponent.prototype, "inputPlaceholder", void 0);
    __decorate([
        core_1.Output(),
        __metadata("design:type", core_1.EventEmitter)
    ], TerraNoteEditorComponent.prototype, "ngModelChange", void 0);
    TerraNoteEditorComponent = TerraNoteEditorComponent_1 = __decorate([
        core_1.Component({
            selector: 'terra-note-editor',
            template: require('./terra-note-editor.component.html'),
            styles: [
                require('./terra-note-editor.component.scss'),
                require('quill/dist/quill.bubble.css'),
                require('quill/dist/quill.snow.css'),
                require('./terra-note-editor.component.glob.scss').toString()
            ],
            providers: [{
                    provide: forms_1.NG_VALUE_ACCESSOR,
                    useExisting: TerraNoteEditorComponent_1,
                    multi: true
                }]
        }),
        __metadata("design:paramtypes", [angular_l10n_1.TranslationService])
    ], TerraNoteEditorComponent);
    return TerraNoteEditorComponent;
    var TerraNoteEditorComponent_1;
}());
exports.TerraNoteEditorComponent = TerraNoteEditorComponent;

//# sourceMappingURL=terra-note-editor.component.js.map
