{"version":3,"sources":["app/components/dynamic-component-loader/terra-dynamic-component-loader.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAYuB;AACvB,6BAAyC;AAMzC;IAOI,8CAAoB,yBAAkD;QAAlD,8BAAyB,GAAzB,yBAAyB,CAAyB;IAEtE,CAAC;IAED,0DAAW,GAAX,UAAY,OAAqB;QAE7B,EAAE,CAAA,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAC7B,CAAC;YACG,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAED,8DAAe,GAAf;QAEI,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,0DAAW,GAAX;QAEI,EAAE,CAAA,CAAC,IAAI,CAAC,OAAO,CAAC,CAChB,CAAC;YACG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC3B,CAAC;IACL,CAAC;IAEO,8DAAe,GAAvB;QAEI,EAAE,CAAA,CAAC,CAAC,wBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAC3C,CAAC;YACG,IAAI,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,uBAAuB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAEnG,IAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC;YAC5C,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAEzB,IAAI,CAAC,OAAO,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACtE,CAAC;IACL,CAAC;IA1CuD;QAAvD,gBAAS,CAAC,iBAAiB,EAAE,EAAC,IAAI,EAAE,uBAAgB,EAAC,CAAC;;iFAAiB;IAC/D;QAAR,YAAK,EAAE;kCAAgB,WAAI;gFAAM;IAHzB,oCAAoC;QAJhD,gBAAS,CAAC;YACP,QAAQ,EAAE,gCAAgC;YAC1C,QAAQ,EAAE,OAAO,CAAC,iDAAiD,CAAC;SACvE,CAAC;yCAQgD,+BAAwB;OAP7D,oCAAoC,CA6ChD;IAAD,2CAAC;CA7CD,AA6CC,IAAA;AA7CY,oFAAoC","file":"app/components/dynamic-component-loader/terra-dynamic-component-loader.component.js","sourcesContent":["import {\n    AfterViewInit,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    Type,\n    ViewChild,\n    ViewContainerRef\n} from '@angular/core';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector: 'terra-dynamic-component-loader',\n    template: require('./terra-dynamic-component-loader.component.html'),\n})\nexport class TerraDynamicComponentLoaderComponent implements AfterViewInit, OnDestroy, OnChanges\n{\n    @ViewChild('viewChildTarget', {read: ViewContainerRef}) viewChildTarget;\n    @Input() inputComponent:Type<any>;\n\n    private _cmpRef:ComponentRef<any>;\n\n    constructor(private _componentFactoryResolver:ComponentFactoryResolver)\n    {\n    }\n\n    ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes[\"inputComponent\"])\n        {\n            this.ngOnDestroy();\n            this.updateComponent();\n        }\n    }\n\n    ngAfterViewInit():void\n    {\n        this.updateComponent();\n    }\n\n    ngOnDestroy():void\n    {\n        if(this._cmpRef)\n        {\n            this._cmpRef.destroy();\n        }\n    }\n\n    private updateComponent():void\n    {\n        if(!isNullOrUndefined(this.inputComponent))\n        {\n            let componentFactory = this._componentFactoryResolver.resolveComponentFactory(this.inputComponent);\n\n            let viewContainerRef = this.viewChildTarget;\n            viewContainerRef.clear();\n\n            this._cmpRef = viewContainerRef.createComponent(componentFactory);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}