{"version":3,"sources":["app/components/layouts/overlay/terra-overlay.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAOuB;AACvB,+CAA+C;AAG/C;;GAEG;AAMH;IAeI;QAEI,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAG1B,IAAI,CAAC,YAAY,GAAG,IAAI,mBAAY,EAAkB,CAAC;QACvD,IAAI,CAAC,YAAY,GAAG,IAAI,mBAAY,EAAkB,CAAC;IAC3D,CAAC;IAED,+CAAe,GAAf;QAEI,EAAE,CAAA,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAC1B,CAAC;YACG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC9B,CAAC;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,aAAa,CAAC,CACtB,CAAC;YACG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACjD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;QAClD,CAAC;IACL,CAAC;IAEM,2CAAW,GAAlB;QAEI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAEM,2CAAW,GAAlB;QAEI,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;IACjC,CAAC;IAEM,gDAAgB,GAAvB;QAEI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAEM,gDAAgB,GAAvB;QAEI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IA1D8B;QAA9B,gBAAS,CAAC,kBAAkB,CAAC;kCAAkB,8BAAc;mEAAC;IAEtD;QAAR,YAAK,EAAE;;oEAA0B;IACzB;QAAR,YAAK,EAAE;;8EAAyD;IACxD;QAAR,YAAK,EAAE;;gFAA2D;IAC1D;QAAR,YAAK,EAAE;;gEAAuB;IACtB;QAAR,YAAK,EAAE;;mEAA0B;IACzB;QAAR,YAAK,EAAE;;+DAAsB;IACrB;QAAR,YAAK,EAAE;;+DAAsB;IACrB;QAAR,YAAK,EAAE;;oEAA2B;IACzB;QAAT,aAAM,EAAE;kCAAc,mBAAY;+DAAiB;IAC1C;QAAT,aAAM,EAAE;kCAAc,mBAAY;+DAAiB;IAb3C,qBAAqB;QALjC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,OAAO,CAAC,gCAAgC,CAAC;YACnD,MAAM,EAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;SACxD,CAAC;;OACW,qBAAqB,CA6DjC;IAAD,4BAAC;CA7DD,AA6DC,IAAA;AA7DY,sDAAqB","file":"app/components/layouts/overlay/terra-overlay.component.js","sourcesContent":["import {\n    AfterViewInit,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild\n} from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\nimport { TerraOverlayButtonInterface } from './data/terra-overlay-button.interface';\n\n/**\n * @author mfrank\n */\n@Component({\n    selector: 'terra-overlay',\n    template: require('./terra-overlay.component.html'),\n    styles:   [require('./terra-overlay.component.scss')]\n})\nexport class TerraOverlayComponent implements AfterViewInit\n{\n    @ViewChild('viewChildOverlay') viewChildOverlay:ModalDirective;\n\n    @Input() inputOverlayTitle:string;\n    @Input() inputPrimaryButtonInterface:TerraOverlayButtonInterface;\n    @Input() inputSecondaryButtonInterface:TerraOverlayButtonInterface;\n    @Input() inputIsStatic:boolean;\n    @Input() inputIsCloseable:boolean;\n    @Input() inputIsLarge:boolean;\n    @Input() inputIsSmall:boolean;\n    @Input() inputIsExtraLarge:boolean;\n    @Output() outputOnHide:EventEmitter<ModalDirective>;\n    @Output() outputOnShow:EventEmitter<ModalDirective>;\n\n    constructor()\n    {\n        this.inputIsStatic = false;\n        this.inputIsCloseable = true;\n        this.inputIsExtraLarge = false;\n        this.inputIsLarge = false;\n        this.inputIsSmall = false;\n\n\n        this.outputOnHide = new EventEmitter<ModalDirective>();\n        this.outputOnShow = new EventEmitter<ModalDirective>();\n    }\n\n    ngAfterViewInit()\n    {\n        if(!this.inputIsCloseable)\n        {\n            this.inputIsStatic = true;\n        }\n\n        if(this.inputIsStatic)\n        {\n            this.viewChildOverlay.config.backdrop = 'static';\n            this.viewChildOverlay.config.keyboard = false;\n        }\n    }\n\n    public showOverlay():void\n    {\n        this.viewChildOverlay.show();\n    }\n\n    public hideOverlay():void\n    {\n        this.viewChildOverlay.hide();\n    }\n\n    public emitOutputOnShow():void\n    {\n        this.outputOnShow.emit(null);\n    }\n\n    public emitOutputOnHide():void\n    {\n        this.outputOnHide.emit(null);\n    }\n}\n"],"sourceRoot":"/source/"}