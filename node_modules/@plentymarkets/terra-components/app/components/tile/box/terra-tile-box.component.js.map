{"version":3,"sources":["app/components/tile/box/terra-tile-box.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAGuB;AAEvB,oEAAgE;AAEhE;;GAEG;AAMH;IAcI;IAEA,CAAC;IAEO,+CAAe,GAAvB,UAAwB,KAAK;QAEzB,KAAK,CAAC,eAAe,EAAE,CAAC;IAC5B,CAAC;IAEO,uDAAuB,GAA/B;QAEI,IAAI,WAAW,GAAW,KAAK,CAAC;QAChC,IAAI,MAAM,GAAW,KAAK,CAAC;QAC3B,IAAI,UAAU,GAAW,KAAK,CAAC;QAE/B,MAAM,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,CACvB,CAAC;YACG,KAAK,wCAAiB,CAAC,UAAU;gBAE7B,WAAW,GAAG,IAAI,CAAC;gBACnB,KAAK,CAAC;YAEV,KAAK,wCAAiB,CAAC,IAAI;gBAEvB,MAAM,GAAG,IAAI,CAAC;gBACd,KAAK,CAAC;YAEV,KAAK,wCAAiB,CAAC,SAAS;gBAE5B,UAAU,GAAG,IAAI,CAAC;gBAClB,KAAK,CAAC;YAEV;gBACI,WAAW,GAAG,IAAI,CAAC;QAC3B,CAAC;QAED,MAAM,CAAC;YACH,UAAU,EAAG,WAAW;YACxB,IAAI,EAAS,MAAM;YACnB,SAAS,EAAI,UAAU;YACvB,WAAW,EAAE,IAAI,CAAC,eAAe;YACjC,WAAW,EAAE,IAAI,CAAC,eAAe;SACpC,CAAA;IACL,CAAC;IAvDQ;QAAR,YAAK,EAAE;;6DAAmB;IAClB;QAAR,YAAK,EAAE;;gEAAsB;IACrB;QAAR,YAAK,EAAE;;4DAAkB;IACjB;QAAR,YAAK,EAAE;;iEAAuB;IACtB;QAAR,YAAK,EAAE;;kEAAyB;IACxB;QAAR,YAAK,EAAE;;kEAAyB;IACxB;QAAR,YAAK,EAAE;;oEAA2B;IAC1B;QAAR,YAAK,EAAE;;+DAAsB;IACrB;QAAR,YAAK,EAAE;;6DAA8B;IAC7B;QAAR,YAAK,EAAE;;kEAAyB;IACxB;QAAR,YAAK,EAAE;kCAAiB,KAAK;kEAAuB;IAZ5C,qBAAqB;QALjC,gBAAS,CAAC;YACP,QAAQ,EAAE,gBAAgB;YAC1B,MAAM,EAAI,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;YACtD,QAAQ,EAAE,OAAO,CAAC,iCAAiC,CAAC;SACvD,CAAC;;OACW,qBAAqB,CA0DjC;IAAD,4BAAC;CA1DD,AA0DC,IAAA;AA1DY,sDAAqB","file":"app/components/tile/box/terra-tile-box.component.js","sourcesContent":["import {\n    Component,\n    Input\n} from '@angular/core';\nimport { TerraButtonInterface } from '../../buttons/button/data/terra-button.interface';\nimport { TerraTileBoxColor } from './data/terra-tile-box-color';\n\n/**\n * @author mkunze\n */\n@Component({\n    selector: 'terra-tile-box',\n    styles:   [require('./terra-tile-box.component.scss')],\n    template: require('./terra-tile-box.component.html')\n})\nexport class TerraTileBoxComponent\n{\n    @Input() inputTitle:string;\n    @Input() inputSubTitle:string;\n    @Input() inputText:string;\n    @Input() inputImagePath:string;\n    @Input() inputIsSelected:boolean;\n    @Input() inputIsDragging:boolean;\n    @Input() inputIsDropTarget:boolean;\n    @Input() inputIsHover:boolean;\n    @Input() inputColor:TerraTileBoxColor; //default LIGHT_BLUE\n    @Input() inputIsLineView:boolean;\n    @Input() inputButtonList:Array<TerraButtonInterface>;\n\n    constructor()\n    {\n    }\n\n    private stopPropagation(event):void\n    {\n        event.stopPropagation();\n    }\n\n    private setClassesToTileBoxItem():Object\n    {\n        let isLightBlue:boolean = false;\n        let isBlue:boolean = false;\n        let isDarkBlue:boolean = false;\n\n        switch(this.inputColor)\n        {\n            case TerraTileBoxColor.LIGHT_BLUE:\n\n                isLightBlue = true;\n                break;\n\n            case TerraTileBoxColor.BLUE:\n\n                isBlue = true;\n                break;\n\n            case TerraTileBoxColor.DARK_BLUE:\n\n                isDarkBlue = true;\n                break;\n\n            default:\n                isLightBlue = true;\n        }\n\n        return {\n            light_blue:  isLightBlue,\n            blue:        isBlue,\n            dark_blue:   isDarkBlue,\n            is_selected: this.inputIsSelected,\n            is_dragging: this.inputIsDragging\n        }\n    }\n}\n"],"sourceRoot":"/source/"}