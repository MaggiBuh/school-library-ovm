{"version":3,"sources":["app/components/file-browser/image-preview/image-preview.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAIuB;AACvB,sEAAmE;AACnE,gFAEyC;AAEzC,6BAAyC;AACzC,kGAA2F;AAO3F;IA4CI,oCAAoB,eAAiC;QAAjC,oBAAe,GAAf,eAAe,CAAkB;QAvC7C,uBAAkB,GAAU,kBAAkB,CAAC;QAI/C,cAAS,GAAsB,EAAE,CAAC;QAElC,eAAU,GAAW,IAAI,CAAC;IAmClC,CAAC;IAhCD,sBAAW,0DAAkB;aAoB7B;YAEI,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC;QACpC,CAAC;aAvBD,UAA8B,MAAyB;YADvD,iBAmBC;YAhBG,IAAI,CAAC,mBAAmB,GAAG,MAAM,CAAC;YAClC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,EAAE,CAAA,CAAC,CAAC,wBAAiB,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,mBAAmB,YAAY,uEAA+B,CAAC,CACjI,CAAC;gBACG,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,IAAuB;oBAE/E,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAC;gBACzC,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CACJ,CAAC;gBACG,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC5B,CAAC;QACL,CAAC;;;OAAA;IAOD,sBAAY,0DAAkB;aAA9B;YAEI,MAAM,CAAC,IAAI,CAAC,mBAAmB,YAAY,uEAA+B,CAAC;QAC/E,CAAC;;;OAAA;IAMO,mDAAc,GAAtB;QAEI,EAAE,CAAA,CAAC,IAAI,CAAC,mBAAmB,YAAY,uEAA+B,CAAC,CACvE,CAAC;YACG,IAAI,CAAC,mBAAmB,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACzF,CAAC;IACL,CAAC;IAnDD;QADC,YAAK,EAAE;kCACmB,sDAAuB;2EAAC;IAWnD;QADC,YAAK,EAAE;kCAC6B,yCAAkB;yCAAlB,yCAAkB;wEAkBtD;IAhCQ,0BAA0B;QALtC,gBAAS,CAAC;YACP,QAAQ,EAAE,qBAAqB;YAC/B,QAAQ,EAAE,OAAO,CAAC,gCAAgC,CAAC;YACnD,MAAM,EAAI,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;SACxD,CAAC;yCA6CsC,wBAAiB;OA5C5C,0BAA0B,CAuDtC;IAAD,iCAAC;CAvDD,AAuDC,IAAA;AAvDY,gEAA0B","file":"app/components/file-browser/image-preview/image-preview.component.js","sourcesContent":["import {\n    ChangeDetectorRef,\n    Component,\n    Input\n} from '@angular/core';\nimport { TerraStorageObject } from '../model/terra-storage-object';\nimport {\n    TerraBaseStorageService\n} from '../terra-base-storage.interface';\nimport { TerraImageMetadata } from '../model/terra-image-metadata.interface';\nimport { isNullOrUndefined } from 'util';\nimport { TerraBaseMetadataStorageService } from '../terra-base-metadata-storage.interface';\n\n@Component({\n    selector: 'terra-image-preview',\n    template: require('./image-preview.component.html'),\n    styles:   [require('./image-preview.component.scss')]\n})\nexport class TerraImagePreviewComponent\n{\n    @Input()\n    public inputStorageService:TerraBaseStorageService;\n\n    private _translationPrefix:string = 'terraFileBrowser';\n\n    private _inputStorageObject:TerraStorageObject;\n\n    private _metadata:TerraImageMetadata = {};\n\n    private _isLoading:boolean = true;\n\n    @Input()\n    public set inputStorageObject(object:TerraStorageObject)\n    {\n        this._inputStorageObject = object;\n        this._metadata = {};\n        this._isLoading = true;\n        if(!isNullOrUndefined(object) && this.inputStorageService && this.inputStorageService instanceof TerraBaseMetadataStorageService)\n        {\n            this.inputStorageService.getMetadata(object.key).subscribe((data:TerraImageMetadata) =>\n            {\n                this._metadata = data;\n                this._isLoading = false;\n                this._changeDetector.detectChanges();\n            });\n        }\n        else\n        {\n            this._isLoading = false;\n        }\n    }\n\n    public get inputStorageObject():TerraStorageObject\n    {\n        return this._inputStorageObject;\n    }\n\n    private get _canHandleMetadata():boolean\n    {\n        return this.inputStorageService instanceof TerraBaseMetadataStorageService;\n    }\n\n    constructor(private _changeDetector:ChangeDetectorRef)\n    {\n    }\n\n    private updateMetadata():void\n    {\n        if(this.inputStorageService instanceof TerraBaseMetadataStorageService)\n        {\n            this.inputStorageService.updateMetadata(this.inputStorageObject.key, this._metadata);\n        }\n    }\n}\n"],"sourceRoot":"/source/"}