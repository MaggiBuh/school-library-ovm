{"version":3,"sources":["app/components/file-browser/model/terra-upload-item.ts"],"names":[],"mappings":"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","file":"app/components/file-browser/model/terra-upload-item.js","sourcesContent":["import { PathHelper } from '../helper/path.helper';\nimport { TerraBaseStorageService } from '../terra-base-storage.interface';\nimport { isNullOrUndefined } from 'util';\n\nexport type UploadCallback = (response:string, status:number, headers:{ [key:string]:string }) => void;\n\nexport class TerraUploadItem\n{\n    public _xhr:XMLHttpRequest;\n    public uploaded:boolean = false;\n\n    public get filename():string\n    {\n        let filenames = this.file.name.split('.');\n        let extname = filenames.pop();\n        return this._uploadService.prepareKey(this.file.name, true);\n    }\n\n    public get pathname():string\n    {\n        let pathname = this._uploadService.prepareKey(PathHelper.join(this._path, this.filename));\n\n        if(pathname.charAt(0) === '/')\n        {\n            pathname = pathname.substr(1);\n        }\n\n        return pathname;\n    }\n\n    private _beforeUpload:Array<(file:File) => void> = [];\n    private _onSuccess:UploadCallback[] = [];\n    private _onCancel:UploadCallback[] = [];\n    private _onError:UploadCallback[] = [];\n    private _onProgress:Array<(progress:number) => void> = [];\n\n    constructor(public file:File, private _path:string, private _uploadService:TerraBaseStorageService)\n    {\n        if(isNullOrUndefined(file))\n        {\n            this.uploaded = true;\n        }\n        if(!isNullOrUndefined(this._path) && this._path.charAt(0) === '/')\n        {\n            this._path = this._path.substr(1);\n        }\n    }\n\n    public beforeUpload(callback:(file:File) => void):TerraUploadItem\n    {\n        this._beforeUpload.push(callback);\n        return this;\n    }\n\n    public onSuccess(callback:UploadCallback):TerraUploadItem\n    {\n        this._onSuccess.push(callback);\n        return this;\n    }\n\n    public onError(callback:UploadCallback):TerraUploadItem\n    {\n        this._onError.push(callback);\n        return this;\n    }\n\n    public onCancel(callback:UploadCallback):TerraUploadItem\n    {\n        this._onCancel.push(callback);\n        return this;\n    }\n\n    public onProgress(callback:(progress:number) => void):TerraUploadItem\n    {\n        this._onProgress.push(callback);\n        return this;\n    }\n\n    public cancelUpload():void\n    {\n        this._uploadService.queue.remove(this);\n        if(!isNullOrUndefined(this._xhr))\n        {\n            this._xhr.abort();\n        }\n    }\n\n\n    public emit(event:string, ...args:any[]):void\n    {\n        if(['beforeUpload',\n            'onSuccess',\n            'onError',\n            'onCancel',\n            'onProgress'].indexOf(event) >= 0)\n        {\n            this['_' + event].forEach((callback:(...args:any[]) => void) =>\n            {\n                callback(...args);\n            });\n\n            if(['onSuccess',\n                'onError',\n                'onCancel'].indexOf(event) >= 0)\n            {\n                this.uploaded = true;\n            }\n        }\n    }\n\n    public static DONE:TerraUploadItem = new TerraUploadItem(null, null, null);\n}\n"],"sourceRoot":"/source/"}