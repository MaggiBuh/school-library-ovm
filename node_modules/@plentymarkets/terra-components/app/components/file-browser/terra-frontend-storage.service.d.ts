import { TerraUploadItem } from './model/terra-upload-item';
import { TerraUploadQueue } from './model/terra-upload-queue';
import { Http } from '@angular/http';
import { TerraStorageObjectList } from './model/terra-storage-object-list';
import { Observable } from 'rxjs/Observable';
import { TerraImageMetadata } from './model/terra-image-metadata.interface';
import { TranslationService } from 'angular-l10n';
import { TerraBaseMetadataStorageService } from './terra-base-storage.interface';
import { TerraLoadingSpinnerService } from '../../../';
export declare class TerraFrontendStorageService extends TerraBaseMetadataStorageService {
    isImagePreviewEnabled: boolean;
    name: string;
    private _storageInitialized;
    private _storageListSubject;
    private readonly _storageList;
    queue: TerraUploadQueue;
    readonly uploadProgress: Observable<number>;
    private _metadataCache;
    constructor(_terraLoadingSpinnerService: TerraLoadingSpinnerService, _http: Http, _translation: TranslationService);
    getStorageList(): Observable<TerraStorageObjectList>;
    createDirectory(path: string): Observable<void>;
    uploadFiles(files: FileList | File[], path?: string): TerraUploadItem[];
    private uploadFile(file, path?);
    getMetadata(key: string): Observable<TerraImageMetadata>;
    updateMetadata(key: string, metadata: TerraImageMetadata): Observable<any>;
    deleteFiles(keyList: string[]): Observable<void>;
    private initStorageList(continuationToken?);
}
