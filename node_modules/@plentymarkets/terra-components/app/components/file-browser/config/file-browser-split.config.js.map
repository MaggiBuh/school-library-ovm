{"version":3,"sources":["app/components/file-browser/config/file-browser-split.config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAA,sCAA2C;AAC3C,8EAAgF;AAChF,kEAAoE;AACpE,2GAAsG;AAKtG,IAAM,gBAAgB,GAAU,+BAA+B,CAAC;AAChE,IAAM,mBAAmB,GAAU,8BAA8B,CAAC;AAClE,IAAM,mBAAmB,GAAU,6BAA6B,CAAC;AAGjE;IAA4C,0CAAyB;IAArE;;IA0EA,CAAC;IApEU,qCAAI,GAAX,UAAY,eAA8C;QAA1D,iBA2CC;QAzCG,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAExC,IAAI,CAAC,aAAa,GAAG;YACjB,MAAM,EAAa,sCAAmB,CAAC,OAAO,EAAE;YAChD,YAAY,EAAO,mBAAmB;YACtC,YAAY,EAAO,gBAAgB;YACnC,IAAI,EAAe,WAAW;YAC9B,iBAAiB,EAAE,sCAAmB,CAAC,gBAAgB,EAAE;YACzD,MAAM,EAAa;gBACf;oBACI,IAAI,EAAG,sBAAsB;oBAC7B,KAAK,EAAE,IAAI,CAAC,gBAAgB;iBAC/B;aACJ;SACJ,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEjC,IAAI,CAAC,iBAAiB,GAAG;YACrB,MAAM,EAAa,8CAAuB,CAAC,OAAO,EAAE;YACpD,YAAY,EAAO,EAAE;YACrB,YAAY,EAAO,mBAAmB;YACtC,IAAI,EAAe,eAAe;YAClC,iBAAiB,EAAE,8CAAuB,CAAC,gBAAgB,EAAE;YAC7D,MAAM,EAAa;gBACf;oBACI,IAAI,EAAG,oBAAoB;oBAC3B,KAAK,EAAE,IAAI;iBACd;gBACD;oBACI,IAAI,EAAG,qBAAqB;oBAC5B,KAAK,EAAE,IAAI;iBACd;aACJ;SACJ,CAAC;QACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;QAEzD,UAAU,CAAC,CAAC;YAER,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAEnB,CAAC;IAEM,iDAAgB,GAAvB,UAAwB,aAAgC,EAAE,cAAsC;QAE5F,IAAI,CAAC,iBAAiB,CAAC,MAAM,GAAG;YAC5B;gBACI,IAAI,EAAG,qBAAqB;gBAC5B,KAAK,EAAE,cAAc;aACxB;YACD;gBACI,IAAI,EAAG,oBAAoB;gBAC3B,KAAK,EAAE,aAAa;aACvB;SACJ,CAAC;QAEF,EAAE,CAAA,CAAC,cAAc,CAAC,qBAAqB,CAAC,CACxC,CAAC;YACG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjD,CAAC;IACL,CAAC;IAEM,iDAAgB,GAAvB;QAEI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC7C,CAAC;IAzEQ,sBAAsB;QADlC,iBAAU,EAAE;OACA,sBAAsB,CA0ElC;IAAD,6BAAC;CA1ED,AA0EC,CA1E2C,yDAAyB,GA0EpE;AA1EY,wDAAsB","file":"app/components/file-browser/config/file-browser-split.config.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TerraImagePreviewModule } from '../image-preview/image-preview.module';\nimport { TerraFileListModule } from '../file-list/file-list.module';\nimport { TerraMultiSplitViewConfig } from '../../split-view/multi/data/terra-multi-split-view.config';\nimport { TerraMultiSplitViewInterface } from '../../split-view/multi/data/terra-multi-split-view.interface';\nimport { TerraStorageObject } from '../model/terra-storage-object';\nimport { TerraBaseStorageService } from '../terra-base-storage.interface';\n\nconst SPLIT_WIDTH_FULL:string = 'col-xs-12 col-md-12 col-lg-12';\nconst SPLIT_WIDTH_CONTENT:string = 'col-xs-12 col-md-9 col-lg-10';\nconst SPLIT_WIDTH_SIDEBAR:string = 'col-xs-12 col-md-3 col-lg-2';\n\n@Injectable()\nexport class FileBrowserSplitConfig extends TerraMultiSplitViewConfig\n{\n    private _fileListView:TerraMultiSplitViewInterface;\n    private _imagePreviewView:TerraMultiSplitViewInterface;\n    private _storageServices:Array<TerraBaseStorageService>;\n\n    public init(storageServices:Array<TerraBaseStorageService>):void\n    {\n        this._storageServices = storageServices;\n\n        this._fileListView = {\n            module:            TerraFileListModule.forRoot(),\n            defaultWidth:      SPLIT_WIDTH_CONTENT,\n            focusedWidth:      SPLIT_WIDTH_FULL,\n            name:              'File List',\n            mainComponentName: TerraFileListModule.getMainComponent(),\n            inputs:            [\n                {\n                    name:  'inputStorageServices',\n                    value: this._storageServices\n                }\n            ]\n        };\n        this.addView(this._fileListView);\n\n        this._imagePreviewView = {\n            module:            TerraImagePreviewModule.forRoot(),\n            defaultWidth:      '',\n            focusedWidth:      SPLIT_WIDTH_SIDEBAR,\n            name:              'Image Preview',\n            mainComponentName: TerraImagePreviewModule.getMainComponent(),\n            inputs:            [\n                {\n                    name:  'inputStorageObject',\n                    value: null\n                },\n                {\n                    name:  'inputStorageService',\n                    value: null\n                }\n            ]\n        };\n        this.addView(this._imagePreviewView, this._fileListView);\n\n        setTimeout((():void =>\n        {\n            this.setSelectedView(this._fileListView);\n        }).bind(this));\n\n    }\n\n    public showImagePreview(storageObject:TerraStorageObject, storageService:TerraBaseStorageService):void\n    {\n        this._imagePreviewView.inputs = [\n            {\n                name:  'inputStorageService',\n                value: storageService\n            },\n            {\n                name:  'inputStorageObject',\n                value: storageObject\n            }\n        ];\n\n        if(storageService.isImagePreviewEnabled)\n        {\n            this.setSelectedView(this._imagePreviewView);\n        }\n    }\n\n    public hideImagePreview():void\n    {\n        this.setSelectedView(this._fileListView);\n    }\n}\n"],"sourceRoot":"/source/"}