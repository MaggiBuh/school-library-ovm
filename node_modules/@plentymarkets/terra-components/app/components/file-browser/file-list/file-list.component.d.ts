import { AfterViewInit, ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { TerraSimpleTableRowInterface } from '../../tables/simple/row/terra-simple-table-row.interface';
import { TerraStorageObject } from '../model/terra-storage-object';
import { TerraBaseStorageService } from '../terra-base-storage.interface';
import { TerraFileBrowserComponent } from '../terra-file-browser.component';
import { TerraFileBrowserService } from '../terra-file-browser.service';
import { TranslationService } from 'angular-l10n';
export declare class TerraFileListComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {
    private _changeDetector;
    private _fileBrowserService;
    private _translationService;
    private _parentFileBrowser;
    inputStorageServices: Array<TerraBaseStorageService>;
    private _translationPrefix;
    private _activeStorageService;
    activeStorageService: TerraBaseStorageService;
    private _fileDropzoneElement;
    private _fileTableComponent;
    private _isDragActive;
    private _dragSubscription;
    private _storageSubscription;
    private _storageList;
    private _currentStorageRoot;
    private _imagePreviewTimeout;
    private _imagePreviewObject;
    private _uploadStatus;
    currentStorageRoot: TerraStorageObject;
    readonly parentStorageObjects: Array<TerraStorageObject>;
    private _showNewDirectoryPrompt;
    private _newDirectoryName;
    newDirectoryName: string;
    private _objectsToDelete;
    private readonly _deleteCount;
    private _selectedStorageObjects;
    private _fileTableHeaderList;
    private _fileTableRowList;
    constructor(_changeDetector: ChangeDetectorRef, _fileBrowserService: TerraFileBrowserService, _translationService: TranslationService, _parentFileBrowser: TerraFileBrowserComponent);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private createDirectory();
    private deleteObjects();
    private renderFileList();
    private fillTableRowList();
    private createTableRow(storageObject);
    private addClipboardButton(storageObject, cellList);
    private addDownloadButton(storageObject, cellList);
    private addDeleteButton(storageObject, cellList);
    private createHeaderListDependingOnAccessLevel();
    private createPublicHeaderList();
    private createPrivateHeaderList();
    private isAllowed(filename);
    private onActiveRowChange(row);
    onSelectionChange(rows: Array<TerraSimpleTableRowInterface<TerraStorageObject>>): void;
    onFileSelect(event: Event): void;
    onFileDrop(event: DragEvent): void;
    private uploadFiles(fileList);
}
