{"version":3,"sources":["app/components/file-browser/file-list/file-list.component.ts"],"names":[],"mappings":"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","file":"app/components/file-browser/file-list/file-list.component.js","sourcesContent":["import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { TerraStorageObjectList } from '../model/terra-storage-object-list';\nimport { TerraSimpleTableHeaderCellInterface } from '../../tables/simple/cell/terra-simple-table-header-cell.interface';\nimport { TerraSimpleTableRowInterface } from '../../tables/simple/row/terra-simple-table-row.interface';\nimport { TerraStorageObject } from '../model/terra-storage-object';\nimport * as moment from 'moment';\nimport {\n    TerraBasePrivateStorageService,\n    TerraBaseStorageService\n} from '../terra-base-storage.interface';\nimport { TerraButtonInterface } from '../../buttons/button/data/terra-button.interface';\nimport { PathHelper } from '../helper/path.helper';\nimport { TerraFileBrowserComponent } from '../terra-file-browser.component';\nimport { FileType } from '../helper/fileType.helper';\nimport { TerraSimpleTableComponent } from '../../tables/simple/terra-simple-table.component';\nimport { TerraFileBrowserService } from '../terra-file-browser.service';\nimport { TerraUploadItem } from '../model/terra-upload-item';\nimport { ClipboardHelper } from '../helper/clipboard.helper';\nimport { TerraSimpleTableCellInterface } from '../../tables/simple/cell/terra-simple-table-cell.interface';\nimport { TranslationService } from 'angular-l10n';\nimport { isNullOrUndefined } from 'util';\n\n@Component({\n    selector: 'terra-file-list',\n    template: require('./file-list.component.html'),\n    styles:   [require('./file-list.component.scss')]\n})\nexport class TerraFileListComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy\n{\n    private _translationPrefix:string = 'terraFileBrowser';\n\n    @Input()\n    public inputStorageServices:Array<TerraBaseStorageService> = null;\n\n    private _activeStorageService:TerraBaseStorageService;\n\n    public get activeStorageService():TerraBaseStorageService\n    {\n        if(!isNullOrUndefined(this._activeStorageService))\n        {\n            return this._activeStorageService;\n        }\n\n        if(!isNullOrUndefined(this.inputStorageServices))\n        {\n            return this.inputStorageServices[0];\n        }\n\n        return null;\n    }\n\n    public set activeStorageService(service:TerraBaseStorageService)\n    {\n        if(service !== this._activeStorageService)\n        {\n            if(!isNullOrUndefined(this._storageSubscription))\n            {\n                this._storageSubscription.unsubscribe();\n            }\n\n            this._storageList = null;\n            this._currentStorageRoot = null;\n            this._activeStorageService = service;\n            if(this._imagePreviewObject)\n            {\n                this._imagePreviewObject = null;\n                this._parentFileBrowser.splitConfig.hideImagePreview();\n            }\n            this.renderFileList();\n            this._storageSubscription = this.activeStorageService.getStorageList().subscribe((storageList) =>\n            {\n                this._storageList = storageList;\n                this.renderFileList();\n            });\n        }\n\n    }\n\n    @ViewChild('fileDropzone', {read: ElementRef})\n    private _fileDropzoneElement:ElementRef;\n\n    @ViewChild(TerraSimpleTableComponent)\n    private _fileTableComponent:TerraSimpleTableComponent<TerraStorageObject>;\n\n    private _isDragActive:boolean = false;\n    private _dragSubscription:Subscription;\n\n    private _storageSubscription:Subscription;\n\n    private _storageList:TerraStorageObjectList;\n\n    private _currentStorageRoot:TerraStorageObject;\n\n    private _imagePreviewTimeout:number;\n\n    private _imagePreviewObject:TerraStorageObject;\n\n    private _uploadStatus:{ [key:string]:boolean } = {};\n\n    public get currentStorageRoot():TerraStorageObject\n    {\n        if(!isNullOrUndefined(this._currentStorageRoot))\n        {\n            return this._currentStorageRoot;\n        }\n\n        if(!isNullOrUndefined(this._storageList))\n        {\n            return this._storageList.root;\n        }\n\n        return null;\n    }\n\n    public set currentStorageRoot(storageObject:TerraStorageObject)\n    {\n        if((isNullOrUndefined(storageObject) || storageObject.isDirectory) && this._currentStorageRoot !== storageObject)\n        {\n            if(this._imagePreviewObject && storageObject !== this._imagePreviewObject)\n            {\n                this._imagePreviewObject = null;\n                this._parentFileBrowser.splitConfig.hideImagePreview();\n            }\n\n            this._currentStorageRoot = storageObject;\n            this.renderFileList();\n        }\n    }\n\n    public get parentStorageObjects():Array<TerraStorageObject>\n    {\n        let current:TerraStorageObject = this.currentStorageRoot;\n        let parents:Array<TerraStorageObject> = [];\n\n        if(!isNullOrUndefined(this._imagePreviewObject))\n        {\n            parents.push(this._imagePreviewObject)\n        }\n\n        while(!isNullOrUndefined(current))\n        {\n            parents.push(current);\n            current = current.parent;\n        }\n\n        return parents.reverse();\n    }\n\n    private _showNewDirectoryPrompt:boolean = false;\n\n    private _newDirectoryName:string = '';\n\n    public get newDirectoryName():string\n    {\n        return this._newDirectoryName;\n    }\n\n    public set newDirectoryName(name:string)\n    {\n        this._newDirectoryName = this.activeStorageService.prepareKey(name, true, true);\n    }\n\n    private _objectsToDelete:Array<TerraStorageObject> = [];\n\n    private get _deleteCount():number\n    {\n        if(isNullOrUndefined(this._objectsToDelete))\n        {\n            return 0;\n        }\n\n        return this._objectsToDelete\n                   .map((object:TerraStorageObject) =>\n                   {\n                       return object.fileCount;\n                   })\n                   .reduce((sum:number, current:number) =>\n                   {\n                       return sum + current;\n                   }, 0);\n    }\n\n    private _selectedStorageObjects:Array<TerraStorageObject> = [];\n\n    private _fileTableHeaderList:Array<TerraSimpleTableHeaderCellInterface> = [];\n\n    private _fileTableRowList:Array<TerraSimpleTableRowInterface<TerraStorageObject>> = [];\n\n    constructor(private _changeDetector:ChangeDetectorRef,\n                private _fileBrowserService:TerraFileBrowserService,\n                private _translationService:TranslationService,\n                @Inject(forwardRef(() => TerraFileBrowserComponent)) private _parentFileBrowser:TerraFileBrowserComponent)\n    {\n    }\n\n    public ngOnInit():void\n    {\n        if(!isNullOrUndefined(this.inputStorageServices) && this.inputStorageServices.length > 0)\n        {\n            this.activeStorageService = this.inputStorageServices[0];\n        }\n        else\n        {\n            console.error('At least one instance of TerraBaseStorageService is required');\n        }\n\n        this._dragSubscription = this._fileBrowserService.isDragActive.subscribe((isDragActive:boolean) =>\n        {\n            this._isDragActive = isDragActive;\n            this._changeDetector.detectChanges();\n        });\n\n        this._parentFileBrowser.onSelectedUrlChange.subscribe((selectedUrl:string) =>\n        {\n            if(selectedUrl && this._storageList)\n            {\n                let object:TerraStorageObject = this._storageList.flatList.find(object => object.publicUrl === selectedUrl);\n\n                if(!isNullOrUndefined(object))\n                {\n                    this.currentStorageRoot = object.parent;\n                    if(FileType.isWebImage(object.key))\n                    {\n                        this._imagePreviewObject = object;\n                        this._parentFileBrowser.splitConfig.showImagePreview(object, this.activeStorageService);\n                    }\n                    let row:TerraSimpleTableRowInterface<TerraStorageObject> = this._fileTableRowList.find(r => r.value === object);\n                    this._fileTableComponent.inputHighlightedRow = row;\n                }\n            }\n        });\n    }\n\n    public ngAfterViewInit():void\n    {\n        this._fileBrowserService.addDropzone(this._fileDropzoneElement.nativeElement);\n    }\n\n    public ngOnChanges(changes:SimpleChanges):void\n    {\n        if(changes.hasOwnProperty('inputStorageServices') && changes['inputStorageServices'].previousValue === null)\n        {\n            this.activeStorageService = this.inputStorageServices[0];\n        }\n    }\n\n    public ngOnDestroy():void\n    {\n        if(!isNullOrUndefined(this._storageSubscription))\n        {\n            this._storageSubscription.unsubscribe();\n        }\n\n        if(!isNullOrUndefined(this._dragSubscription))\n        {\n            this._dragSubscription.unsubscribe();\n        }\n\n        this._fileBrowserService.removeDropzone(this._fileDropzoneElement.nativeElement);\n\n    }\n\n    private createDirectory():void\n    {\n        let path:string = PathHelper.join(\n            this.currentStorageRoot ? this.currentStorageRoot.key : '/',\n            this.newDirectoryName\n        );\n        this._showNewDirectoryPrompt = false;\n        this._newDirectoryName = null;\n        this.activeStorageService.createDirectory(path);\n    }\n\n    private deleteObjects():void\n    {\n        let keyList = [];\n        let extractKeys = (objects:Array<TerraStorageObject>) =>\n        {\n            objects.forEach((object:TerraStorageObject) =>\n            {\n                keyList.push(object.key);\n                if(object.isDirectory)\n                {\n                    extractKeys(object.children);\n                }\n            });\n        };\n        extractKeys(this._objectsToDelete);\n        this.activeStorageService.deleteFiles(keyList);\n        this._objectsToDelete = [];\n        if(!isNullOrUndefined(this._imagePreviewObject) && keyList.indexOf(this._imagePreviewObject.key))\n        {\n            this._imagePreviewObject = null;\n            this._parentFileBrowser.splitConfig.hideImagePreview();\n        }\n    }\n\n    private renderFileList():void\n    {\n        if(!isNullOrUndefined(this.activeStorageService))\n        {\n            this.createHeaderListDependingOnAccessLevel();\n        }\n\n        if(!isNullOrUndefined(this.currentStorageRoot))\n        {\n            this.fillTableRowList();\n        }\n        else\n        {\n            this._fileTableRowList = [];\n        }\n\n        this._selectedStorageObjects = [];\n        this._parentFileBrowser.outputSelectedChange.emit(null);\n        this._changeDetector.detectChanges();\n    }\n\n    private fillTableRowList():void\n    {\n        this._fileTableRowList = this.currentStorageRoot.children.filter((storageObject:TerraStorageObject) =>\n            {\n                return storageObject.isFile || this._parentFileBrowser.inputAllowFolders;\n            }\n        ).sort((objectA:TerraStorageObject, objectB:TerraStorageObject) =>\n            {\n                return objectA.name.localeCompare(objectB.name);\n            }\n        ).map((storageObject:TerraStorageObject) =>\n        {\n            return this.createTableRow(storageObject);\n        });\n    }\n\n    private createTableRow(storageObject:TerraStorageObject):TerraSimpleTableRowInterface<TerraStorageObject>\n    {\n        let cellList:Array<TerraSimpleTableCellInterface> = [];\n\n        cellList.push(\n            {\n                caption: storageObject.name,\n                icon:    this._uploadStatus[storageObject.key] ? 'icon-loading' : storageObject.icon\n            }\n        );\n\n        if(!(this.activeStorageService instanceof TerraBasePrivateStorageService))\n        {\n            cellList.push({\n                caption: storageObject.isFile ? storageObject.publicUrl : ''\n            });\n\n            this.addClipboardButton(storageObject, cellList);\n        }\n\n        cellList.push(\n            {\n                caption: storageObject.isFile ? storageObject.sizeString : ''\n            },\n            {\n                caption: storageObject.isFile ? moment(storageObject.lastModified).format('YYYY-MM-DD HH:mm') : ''\n            }\n        );\n\n        if(this.activeStorageService instanceof TerraBasePrivateStorageService && storageObject.isFile)\n        {\n            this.addDownloadButton(storageObject, cellList);\n        }\n\n        this.addDeleteButton(storageObject, cellList);\n\n        return {\n            cellList: cellList,\n            value:    storageObject,\n            disabled: !this.isAllowed(storageObject.key)\n        };\n    }\n\n    private addClipboardButton(storageObject:TerraStorageObject, cellList:Array<TerraSimpleTableCellInterface>):void\n    {\n        let clipboardButton:TerraButtonInterface = {\n            icon:             'icon-copy_clipboard',\n            clickFunction:    (event:Event) =>\n                              {\n                                  ClipboardHelper.copyText(storageObject.publicUrl);\n                                  event.stopPropagation();\n                              },\n            tooltipText:      this._translationService.translate(this._translationPrefix + '.copyToClipboard'),\n            tooltipPlacement: 'left'\n        };\n\n        cellList.push(\n            {\n                buttonList: storageObject.isFile ? [clipboardButton] : []\n            }\n        );\n    }\n\n    private addDownloadButton(storageObject:TerraStorageObject, cellList:Array<TerraSimpleTableCellInterface>):void\n    {\n        cellList.push({\n            buttonList: [{\n                icon:             'icon-download',\n                clickFunction:    (event:Event) =>\n                                  {\n                                      (<TerraBasePrivateStorageService> this.activeStorageService).downloadFile(storageObject.key);\n                                      event.stopPropagation();\n                                  },\n                tooltipText:      this._translationService.translate(this._translationPrefix + '.downloadFile'),\n                tooltipPlacement: 'left'\n            }]\n        });\n    }\n\n    private addDeleteButton(storageObject:TerraStorageObject, cellList:Array<TerraSimpleTableCellInterface>):void\n    {\n        cellList.push({\n            buttonList: [{\n                icon:             'icon-delete',\n                clickFunction:    (event:Event) =>\n                                  {\n                                      this._objectsToDelete = [storageObject];\n                                      event.stopPropagation();\n                                  },\n                isSecondary:      true,\n                tooltipText:      storageObject.isFile ?\n                                      this._translationService.translate(this._translationPrefix + '.deleteFile') :\n                                      this._translationService.translate(this._translationPrefix + '.deleteFolder'),\n                tooltipPlacement: 'left'\n            }]\n        });\n    }\n\n    private createHeaderListDependingOnAccessLevel():void\n    {\n        if(this.activeStorageService instanceof TerraBasePrivateStorageService)\n        {\n            this.createPrivateHeaderList();\n        }\n        else\n        {\n            this.createPublicHeaderList();\n        }\n    }\n\n    private createPublicHeaderList():void\n    {\n        this._fileTableHeaderList = [\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.fileName'),\n                width:   '30%'\n            },\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.fileURL'),\n                width:   '50%'\n            },\n            {\n                caption: '',\n                width:   '1'\n            },\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.fileSize'),\n                width:   '7.5%'\n            },\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.lastChange'),\n                width:   '12.5%'\n            },\n            {\n                caption: '',\n                width:   '1'\n            }\n        ];\n    }\n\n    private createPrivateHeaderList():void\n    {\n        this._fileTableHeaderList = [\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.fileName'),\n                width:   '80%'\n            },\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.fileSize'),\n                width:   '7.5%'\n            },\n            {\n                caption: this._translationService.translate(this._translationPrefix + '.lastChange'),\n                width:   '12.5%'\n            },\n            {\n                caption: '',\n                width:   '1'\n            },\n            {\n                caption: '',\n                width:   '1'\n            }\n        ];\n    }\n\n    private isAllowed(filename:string):boolean\n    {\n        if(isNullOrUndefined(filename))\n        {\n            return false;\n        }\n\n        return this._parentFileBrowser.inputAllowedExtensions.length <= 0\n               || this._parentFileBrowser.inputAllowedExtensions.indexOf(PathHelper.extName(filename)) >= 0\n               || PathHelper.isDirectory(filename)\n    }\n\n    private onActiveRowChange(row:TerraSimpleTableRowInterface<TerraStorageObject>):void\n    {\n        if(isNullOrUndefined(this._imagePreviewTimeout))\n        {\n            clearTimeout(this._imagePreviewTimeout);\n        }\n        let debounceFn = () =>\n        {\n            let storageObject:TerraStorageObject = row.value;\n\n            if(!isNullOrUndefined(storageObject) && FileType.isWebImage(storageObject.key))\n            {\n                this._imagePreviewObject = storageObject;\n                this._parentFileBrowser.splitConfig.showImagePreview(storageObject, this.activeStorageService);\n            }\n            else\n            {\n                this._imagePreviewObject = null;\n                this._parentFileBrowser.splitConfig.hideImagePreview();\n            }\n\n            this._parentFileBrowser.outputSelectedChange.emit(storageObject);\n        };\n        this._imagePreviewTimeout = setTimeout(debounceFn.bind(this), 500);\n    }\n\n    public onSelectionChange(rows:Array<TerraSimpleTableRowInterface<TerraStorageObject>>):void\n    {\n        this._selectedStorageObjects = rows.map((row:TerraSimpleTableRowInterface<TerraStorageObject>) =>\n        {\n            return row.value;\n        });\n    }\n\n    public onFileSelect(event:Event):void\n    {\n        if(!isNullOrUndefined(event.srcElement))\n        {\n            this.activeStorageService\n                .uploadFiles(\n                    (<any>event.srcElement).files || [],\n                    this.currentStorageRoot ? this.currentStorageRoot.key : '/'\n                );\n\n            // unset value of file input to allow selecting same file again\n            (<HTMLInputElement>event.target).value = '';\n        }\n    }\n\n    public onFileDrop(event:DragEvent):void\n    {\n        if(!isNullOrUndefined(event.dataTransfer.files))\n        {\n            this.activeStorageService.uploadFiles(\n                event.dataTransfer.files,\n                this.currentStorageRoot ? this.currentStorageRoot.key : '/'\n            );\n        }\n    }\n\n    private uploadFiles(fileList:FileList | File[]):void\n    {\n        let uploadPrefix:string = this.currentStorageRoot ? this.currentStorageRoot.key : '/';\n        this.activeStorageService\n            .uploadFiles(\n                (<any>event.srcElement).files || [],\n                uploadPrefix\n            )\n            .forEach((uploadItem:TerraUploadItem) =>\n            {\n                this._uploadStatus[uploadPrefix + uploadItem.filename] = true;\n                uploadItem.onSuccess(() =>\n                {\n                    this._uploadStatus[uploadPrefix + uploadItem.filename] = false;\n                    this.renderFileList();\n                });\n            });\n    }\n\n}"],"sourceRoot":"/source/"}