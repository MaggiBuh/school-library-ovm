{"version":3,"sources":["app/components/split-view/terra-split-view.component.ts"],"names":[],"mappings":"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","file":"app/components/split-view/terra-split-view.component.js","sourcesContent":["import {\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges\n} from '@angular/core';\nimport { TerraSplitViewInterface } from './data/terra-split-view.interface';\n\n/** @deprecated - please use `TerraMultiSplitViewComponent` instead */\n@Component({\n    selector: 'terra-split-view',\n    template: require('./terra-split-view.component.html'),\n    styles:   [require('./terra-split-view.component.scss'),\n               require('./terra-split-view.component.glob.scss').toString()\n    ]\n})\nexport class TerraSplitViewComponent implements OnChanges, OnDestroy\n{\n    @Input() inputModules:Array<TerraSplitViewInterface>;\n    @Input() inputShowBreadcrumbs:boolean;\n    @Input() inputUpdateViewport:boolean;\n    private _breadCrumbsPath:string;\n\n    public static ANIMATION_SPEED = 1000; // ms\n\n    constructor()\n    {\n        this.inputShowBreadcrumbs = true; // default\n        this._breadCrumbsPath = '';\n        this.inputUpdateViewport = true;\n    }\n\n    ngOnDestroy()\n    {\n        this.inputModules.splice(0, this.inputModules.length);\n    }\n\n    ngOnChanges(changes:SimpleChanges)\n    {\n        if(this.inputUpdateViewport)\n        {\n            if(changes[\"inputModules\"].currentValue !== undefined && changes[\"inputModules\"].currentValue.length > 0)\n            {\n                let currentModule = this.inputModules[this.inputModules.length - 1];\n                this.updateViewport(currentModule.mainComponentName + \"_\" + currentModule.instanceKey);\n            }\n\n            // init breadcrumb sliding\n            setTimeout(function()\n            {\n                $('.terra-breadcrumbs').each(function()\n                {\n                    $(this).find('li').each(function()\n                    {\n                        var viewContainer = $(this).closest('.terra-breadcrumbs');\n                        var viewContainerOffsetLeft = viewContainer.offset().left;\n                        var viewContainerWidth = viewContainer.width();\n\n                        $(this).off();\n                        $(this).mouseenter(function()\n                        {\n                            var elementWidth = $(this).width();\n                            var elementOffsetLeft = $(this).offset().left;\n                            var viewContainerScrollLeft = viewContainer.scrollLeft();\n                            var offset = 0;\n\n                            if(elementOffsetLeft < viewContainer.offset().left)\n                            {\n                                offset = viewContainerScrollLeft + elementOffsetLeft;\n                            }\n                            else if(elementOffsetLeft + elementWidth + 30 > viewContainerOffsetLeft + viewContainerWidth)\n                            {\n                                offset = viewContainerScrollLeft + elementOffsetLeft + elementWidth + 30 - viewContainerWidth;\n                            }\n                            else\n                            {\n                                return;\n                            }\n                            viewContainer.stop();\n                            viewContainer.animate({scrollLeft: offset}, 1200);\n                        });\n                    });\n                });\n            });\n        }\n    }\n\n    private updateViewport(id:string):void\n    {\n        setTimeout(function()\n        {\n            let anchor = $('#' + id);\n            let breadcrumb = $('.' + id);\n            let breadCrumbContainer = breadcrumb.closest('.terra-breadcrumbs');\n            let viewContainer = anchor.parent();\n            let offset = 3;\n            let prevSplitView = breadcrumb.closest('.view').prev();\n\n            // update breadcrumbs\n            breadcrumb.closest('.terra-breadcrumbs').find('div').each(function()\n            {\n                $(this).removeClass('active');\n            });\n\n            breadcrumb.addClass('active');\n\n            // focus breadcrumbs\n            if(breadcrumb[0] != null)\n            {\n                breadCrumbContainer.stop();\n                breadCrumbContainer.animate(\n                    {scrollLeft: (breadcrumb[0].getBoundingClientRect().left + breadCrumbContainer.scrollLeft())},\n                    this.ANIMATION_SPEED);\n            }\n\n            // focus view\n            if(anchor[0].getBoundingClientRect().left > viewContainer.scrollLeft() - offset &&\n               anchor[0].getBoundingClientRect().right <= viewContainer[0].getBoundingClientRect().right)\n            {\n                return;\n            }\n\n            // offset fix for navigator\n            if(prevSplitView[0] != null)\n            {\n                offset = offset + prevSplitView.width() + (3 * offset);\n            }\n\n            // offset fix for overlay\n            if($($(anchor[0].closest('.hasSplitView')).find(anchor))[0] != null)\n            {\n                offset = offset + ($(window).width() / 2 - viewContainer.width() / 2);\n            }\n\n            viewContainer.stop();\n            viewContainer.animate({scrollLeft: (anchor[0].getBoundingClientRect().left + viewContainer.scrollLeft() - offset)},\n                this.ANIMATION_SPEED);\n        });\n    }\n}\n"],"sourceRoot":"/source/"}