{"version":3,"sources":["app/components/split-view/multi/data/terra-multi-split-view.config.ts"],"names":[],"mappings":"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","file":"app/components/split-view/multi/data/terra-multi-split-view.config.js","sourcesContent":["import {\n    EventEmitter,\n    Injectable\n} from '@angular/core';\nimport { TerraMultiSplitViewInterface } from './terra-multi-split-view.interface';\nimport { isNullOrUndefined } from 'util';\n\n@Injectable()\nexport class TerraMultiSplitViewConfig\n{\n    public currentSelectedView:TerraMultiSplitViewInterface;\n    public resizeViewEventEmitter:EventEmitter<TerraMultiSplitViewInterface> = new EventEmitter<TerraMultiSplitViewInterface>();\n\n    private _views:Array<TerraMultiSplitViewInterface> = [];\n\n    private _addViewEventEmitter:EventEmitter<TerraMultiSplitViewInterface> = new EventEmitter<TerraMultiSplitViewInterface>();\n    private _deleteViewEventEmitter:EventEmitter<TerraMultiSplitViewInterface> = new EventEmitter<TerraMultiSplitViewInterface>();\n    private _selectBreadcrumbEventEmitter:EventEmitter<TerraMultiSplitViewInterface> = new EventEmitter<TerraMultiSplitViewInterface>();\n    private _setSelectedViewEventEmitter:EventEmitter<TerraMultiSplitViewInterface> = new EventEmitter<TerraMultiSplitViewInterface>();\n\n    public addView(view:TerraMultiSplitViewInterface, parent?:TerraMultiSplitViewInterface):void\n    {\n        if(view.parameter)\n        {\n            console.warn(\n                'Property \\'parameter\\' is deprecated. It will be removed in one of the upcoming releases. Please use \\'inputs\\' instead.')\n        }\n\n        // TODO: setTimeout can be removed, if it is guaranteed that change detection is fired when adding a new view\n        setTimeout(() =>\n            {\n                if(isNullOrUndefined(view.isBackgroundColorGrey))\n                {\n                    view.isBackgroundColorGrey = false;\n                }\n\n                if(isNullOrUndefined(parent))\n                {\n                    if(isNullOrUndefined(this.currentSelectedView))\n                    {\n                        this.currentSelectedView = view;\n                        this._views.push(view);\n                    }\n                    else\n                    {\n                        parent = this.currentSelectedView;\n                    }\n                }\n\n                if(parent)\n                {\n                    view.parent = parent;\n\n                    if(isNullOrUndefined(parent.children))\n                    {\n                        parent.children = [view];\n                    }\n                    else\n                    {\n                        let viewExist:boolean = false;\n\n                        for(let child of parent.children)\n                        {\n                            // TODO very ugly way, maybe add an option to use an id?\n                            let hasSameParameter:boolean =\n                                (child.parameter && view.parameter && JSON.stringify(child.parameter) === JSON.stringify(view.parameter)) ||\n                                (child.inputs && view.inputs && JSON.stringify(child.inputs) === JSON.stringify(view.inputs)) ||\n                                (child.name === view.name);\n\n                            if(hasSameParameter && child.module.ngModule == view.module.ngModule)\n                            {\n                                view = child;\n                                viewExist = true;\n                                break;\n                            }\n                        }\n\n                        if(!viewExist)\n                        {\n                            parent.children.push(view);\n                        }\n                    }\n                }\n\n                this.addViewEventEmitter.next(view);\n            }\n        );\n    }\n\n    public removeView(view:TerraMultiSplitViewInterface):void\n    {\n        if(isNullOrUndefined(view))\n        {\n            return;\n        }\n\n        let parent:TerraMultiSplitViewInterface = view.parent;\n\n        let viewIndex:number = parent.children.findIndex((elem) => elem === view);\n\n        if(viewIndex >= 0)\n        {\n            parent.children.splice(viewIndex, 1);\n            this.deleteViewEventEmitter.next(view);\n        }\n    }\n\n    public resizeView(view:TerraMultiSplitViewInterface, width:string):void\n    {\n        view.defaultWidth = width;\n        this.resizeViewEventEmitter.next(view);\n    }\n\n    public setSelectedView(view:TerraMultiSplitViewInterface):void\n    {\n        this._setSelectedViewEventEmitter.next(view);\n    }\n\n    public reset():void\n    {\n        this._views = [];\n        this.currentSelectedView = null;\n        this._addViewEventEmitter.unsubscribe();\n        this._addViewEventEmitter = new EventEmitter<TerraMultiSplitViewInterface>();\n        this._deleteViewEventEmitter.unsubscribe();\n        this._deleteViewEventEmitter = new EventEmitter<TerraMultiSplitViewInterface>();\n        this.resizeViewEventEmitter.unsubscribe();\n        this.resizeViewEventEmitter = new EventEmitter<TerraMultiSplitViewInterface>();\n        this._selectBreadcrumbEventEmitter.unsubscribe();\n        this._selectBreadcrumbEventEmitter = new EventEmitter<TerraMultiSplitViewInterface>();\n        this._setSelectedViewEventEmitter.unsubscribe();\n        this._setSelectedViewEventEmitter = new EventEmitter<TerraMultiSplitViewInterface>();\n    }\n\n    public get deleteViewEventEmitter():EventEmitter<TerraMultiSplitViewInterface>\n    {\n        return this._deleteViewEventEmitter;\n    }\n\n    public get addViewEventEmitter():EventEmitter<TerraMultiSplitViewInterface>\n    {\n        return this._addViewEventEmitter;\n    }\n\n    public get selectBreadcrumbEventEmitter():EventEmitter<TerraMultiSplitViewInterface>\n    {\n        return this._selectBreadcrumbEventEmitter;\n    }\n\n    public get setSelectedViewEventEmitter():EventEmitter<TerraMultiSplitViewInterface>\n    {\n        return this._setSelectedViewEventEmitter;\n    }\n}\n"],"sourceRoot":"/source/"}