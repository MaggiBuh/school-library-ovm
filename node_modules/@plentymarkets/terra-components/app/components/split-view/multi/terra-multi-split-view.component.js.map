{"version":3,"sources":["app/components/split-view/multi/terra-multi-split-view.component.ts"],"names":[],"mappings":"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","file":"app/components/split-view/multi/terra-multi-split-view.component.js","sourcesContent":["import {\n    Component,\n    HostListener,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit\n} from '@angular/core';\nimport { isNullOrUndefined } from 'util';\nimport { TerraMultiSplitViewConfig } from './data/terra-multi-split-view.config';\nimport { TerraMultiSplitViewDetail } from './data/terra-multi-split-view-detail';\nimport { TerraMultiSplitViewInterface } from './data/terra-multi-split-view.interface';\nimport * as AngularRouter from '@angular/router'; // Required to use both Angular Router Events and ES6 Events\nimport {\n    NavigationStart,\n    Router,\n    Routes\n} from '@angular/router';\n\nlet nextSplitViewId:number = 0;\n\n@Component({\n    selector: 'terra-multi-split-view',\n    template: require('./terra-multi-split-view.component.html'),\n    styles:   [\n        require('./terra-multi-split-view.component.scss'),\n        require('./terra-multi-split-view.component.glob.scss').toString()\n    ],\n})\nexport class TerraMultiSplitViewComponent implements OnDestroy, OnInit\n{\n    @Input() inputConfig:TerraMultiSplitViewConfig;\n    @Input() inputShowBreadcrumbs:boolean;\n    @Input() inputComponentRoute:string; // to catch the routing event, when selecting the tab where the split view is instantiated\n\n    @HostListener('window:resize')\n    onWindowResize()\n    {\n        this.zone.runOutsideAngular(() =>\n            {\n                // debounce resize, wait for resize to finish before updating the viewport\n                if(this.resizeTimeout)\n                {\n                    clearTimeout(this.resizeTimeout);\n                }\n                this.resizeTimeout = setTimeout((() =>\n                    {\n                        if(this.inputConfig.currentSelectedView)\n                        {\n                            this.updateViewport(this.inputConfig.currentSelectedView, true);\n                        }\n                    }\n                ).bind(this), 500);\n            }\n        )\n    };\n\n    private _breadCrumbsPath:string;\n\n    private modules:Array<TerraMultiSplitViewDetail> = [];\n\n    public static ANIMATION_SPEED = 1000; // ms\n\n    private resizeTimeout:number;\n\n    private splitViewId:number;\n\n    constructor(private zone:NgZone, private _router:Router)\n    {\n        this.inputShowBreadcrumbs = true; // default\n        this._breadCrumbsPath = '';\n        this.splitViewId = nextSplitViewId++;\n    }\n\n    ngOnDestroy()\n    {\n        this.inputConfig.reset();\n    }\n\n    ngOnInit()\n    {\n        // catch routing events, but only those that select the tab where the split view is instantiated\n        if(!isNullOrUndefined(this._router) && !isNullOrUndefined(this.inputComponentRoute))\n        {\n            // check if the given route exists in the route config\n            if(this.routeExists(this.inputComponentRoute))\n            {\n                // register event listener\n                this._router.events\n                    .filter((event:AngularRouter.Event) => event instanceof NavigationStart && event.url === this.inputComponentRoute)\n                    .subscribe((path:NavigationStart) =>\n                    {\n                        this.updateViewport(this.inputConfig.currentSelectedView, true);\n                    });\n            }\n        }\n\n        this.inputConfig.addViewEventEmitter.subscribe((value:TerraMultiSplitViewInterface) =>\n        {\n            // synchronize modules array with input config\n            this.addToModulesIfNotExist(value);\n\n            // set the selected view\n            this.setSelectedView(value);\n        });\n\n        this.inputConfig.deleteViewEventEmitter.subscribe((value:TerraMultiSplitViewInterface) =>\n        {\n            // update modules array\n            let viewToSelect:TerraMultiSplitViewInterface = this.removeFromModules(value);\n\n            // select the parent view\n            this.setSelectedView(viewToSelect);\n        });\n\n        this.inputConfig.resizeViewEventEmitter.subscribe((value:TerraMultiSplitViewInterface) =>\n        {\n            this.resizeViewAndModule(value);\n        });\n\n        this.inputConfig.setSelectedViewEventEmitter.subscribe((value:TerraMultiSplitViewInterface) =>\n        {\n            this.setSelectedView(value);\n        });\n    }\n\n    private addToModulesIfNotExist(view:TerraMultiSplitViewInterface):void\n    {\n        // check whether view is null or undefined\n        if(isNullOrUndefined(view))\n        {\n            return;\n        }\n\n        // get hierarchy level of selected view\n        let hierarchyLevel:number = this.getHierarchyLevelOfView(view);\n\n        // check if modules array is not initialized\n        if(isNullOrUndefined(this.modules[hierarchyLevel]))\n        {\n            this.modules.push(\n                {\n                    views:                 [],\n                    identifier:            view.mainComponentName,\n                    width:                 view.focusedWidth ? view.focusedWidth : view.defaultWidth,\n                    currentSelectedView:   view,\n                    isBackgroundColorGrey: view.isBackgroundColorGrey\n                }\n            );\n        }\n\n        // get the module of the hierarchy\n        let module = this.modules[hierarchyLevel];\n\n        // initialize views array if null or undefined\n        if(isNullOrUndefined(module.views))\n        {\n            module.views = [];\n        }\n\n        // check if view is already added to module's views array\n        if(!module.views.find((elem) => elem === view))\n        {\n            // add view to the module's views array\n            module.views.push(view);\n        }\n    }\n\n    private setSelectedView(view:TerraMultiSplitViewInterface)\n    {\n        // check whether view is defined\n        if(isNullOrUndefined(view))\n        {\n            return;\n        }\n\n        // check whether the view's module is defined\n        let module:TerraMultiSplitViewDetail = this.getModuleOfView(view);\n        if(isNullOrUndefined(module))\n        {\n            return;\n        }\n\n        // check if view is already selected\n        if(this.inputConfig.currentSelectedView === view)\n        {\n            // stop execution, since the view is already selected\n            return;\n        }\n\n        if(!isNullOrUndefined(this.inputConfig.selectBreadcrumbEventEmitter))\n        {\n            this.inputConfig.selectBreadcrumbEventEmitter.next(view);\n        }\n\n        module.isBackgroundColorGrey = view.isBackgroundColorGrey;\n\n        // check whether the view is already opened\n        if(module.currentSelectedView === view)\n        {\n            // also set the width of the view\n            module.width = !isNullOrUndefined(view.focusedWidth) ? view.focusedWidth : view.defaultWidth;\n        }\n        // vertical selection has changed\n        else\n        {\n            this.rebuildModules(view, module);\n        }\n\n        // if module has changed horizontally\n        let inputModule:TerraMultiSplitViewDetail = this.getModuleOfView(this.inputConfig.currentSelectedView);\n        if(inputModule !== this.getModuleOfView(view)\n           && !isNullOrUndefined(inputModule)) // this has to be checked, since a module can be removed and hence isn't existing anymore\n        {\n            inputModule.width = this.inputConfig.currentSelectedView.defaultWidth;\n        }\n\n        this.inputConfig.currentSelectedView = view;\n        this.updateViewport(view);\n        this.updateBreadCrumbs();\n    }\n\n    private updateBreadCrumbs()\n    {\n        this.zone.runOutsideAngular(() =>\n        {\n            // init breadcrumb sliding\n            setTimeout(function()\n            {\n                $('.terra-breadcrumbs').each(function()\n                {\n                    $(this).find('li').each(function()\n                    {\n                        let viewContainer = $(this).closest('.terra-breadcrumbs');\n                        let viewContainerOffsetLeft = viewContainer.offset().left;\n                        let viewContainerWidth = viewContainer.width();\n\n                        $(this).off();\n                        $(this).mouseenter(function()\n                        {\n                            let elementWidth = $(this).width();\n                            let elementOffsetLeft = $(this).offset().left;\n                            let viewContainerScrollLeft = viewContainer.scrollLeft();\n                            let offset = 0;\n\n                            if(elementOffsetLeft < viewContainer.offset().left)\n                            {\n                                offset = viewContainerScrollLeft + elementOffsetLeft - 10;\n                            }\n                            else if(elementOffsetLeft + elementWidth + 30 > viewContainerOffsetLeft + viewContainerWidth)\n                            {\n                                offset = viewContainerScrollLeft + elementOffsetLeft + elementWidth + 30 - viewContainerWidth;\n                            }\n                            else\n                            {\n                                return;\n                            }\n                            viewContainer.stop();\n                            viewContainer.animate({scrollLeft: offset}, 1200);\n                        });\n                    });\n                });\n            });\n        });\n    }\n\n    public updateViewport(view:TerraMultiSplitViewInterface, skipAnimation?:boolean):void\n    {\n        // check if view is defined\n        if(isNullOrUndefined(view))\n        {\n            return;\n        }\n\n        this.zone.runOutsideAngular(() =>\n        {\n            let splitViewId:number = this.splitViewId;\n            setTimeout(function()\n            {\n                let id:string = view.mainComponentName;\n\n                let parent:TerraMultiSplitViewInterface = view.parent;\n                let moduleIndex:number = 0;\n\n                while(!isNullOrUndefined(parent))\n                {\n                    parent = parent.parent;\n                    moduleIndex++;\n                }\n\n                let anchor = $('#splitview' + splitViewId + '_module' + moduleIndex);\n                let currentBreadcrumb = $('.' + id); // TODO: vwiebe, fix scope\n                let breadCrumbContainer = currentBreadcrumb.closest('.terra-breadcrumbs');\n                let viewContainer = anchor.parent();\n\n                // focus breadcrumbs\n                if(currentBreadcrumb[0] != null)\n                {\n                    breadCrumbContainer.stop();\n                    breadCrumbContainer.animate(\n                        {scrollLeft: (currentBreadcrumb[0].getBoundingClientRect().left + breadCrumbContainer.scrollLeft())},\n                        this.ANIMATION_SPEED);\n                }\n\n                // check if viewport needs to be adjusted\n                if(anchor[0] != null &&\n                   anchor[0].getBoundingClientRect().left > viewContainer.offset().left &&\n                   anchor[0].getBoundingClientRect().right <= viewContainer.offset().left + viewContainer.outerWidth())\n                {\n                    return;\n                }\n\n                // interrupt all ongoing animations to prevent queue\n                viewContainer.stop();\n\n                // focus view horizontally\n                if(skipAnimation)\n                {\n                    viewContainer.scrollLeft(Math.ceil(anchor[0].getBoundingClientRect().left + viewContainer.scrollLeft() - viewContainer.offset().left));\n                }\n                else\n                {\n                    viewContainer.animate(\n                        {scrollLeft: (Math.ceil(anchor[0].getBoundingClientRect().left + viewContainer.scrollLeft() - viewContainer.offset().left))},\n                        this.ANIMATION_SPEED);\n                }\n            });\n        });\n    }\n\n    private rebuildModules(view:TerraMultiSplitViewInterface, module:TerraMultiSplitViewDetail):void\n    {\n        if(isNullOrUndefined(view))\n        {\n            return;\n        }\n\n        let hierarchyLevel:number = this.getHierarchyLevelOfView(view);\n\n        // cut off last elements\n        this.modules = this.modules.slice(0, hierarchyLevel + 1);\n\n        // rebuild\n        if(!isNullOrUndefined(view.children))\n        {\n            view.children.forEach((child) =>\n                {\n                    // add view to the modules array\n                    this.addToModulesIfNotExist(child);\n\n                    // set selected view and rebuild sub tree for children\n                    this.setSelectedView(child);\n                }\n            );\n        }\n\n        // update the corresponding module's current- and lastSelectedView\n        let moduleView:TerraMultiSplitViewInterface = module.views.find((v) => v === view);\n\n        // an existing view has been SELECTED?\n        if(moduleView)\n        {\n            module.lastSelectedView = module.currentSelectedView;\n            module.currentSelectedView = view;\n\n            // also set the width of the view\n            module.width = !isNullOrUndefined(view.focusedWidth) ? view.focusedWidth : view.defaultWidth;\n        }\n    }\n\n    private removeFromModules(view:TerraMultiSplitViewInterface):TerraMultiSplitViewInterface\n    {\n        // check whether view is null or undefined\n        if(isNullOrUndefined(view))\n        {\n            // ERROR... stop further execution\n            return view;\n        }\n\n        // get the corresponding module\n        let module = this.getModuleOfView(view);\n\n        // check whether module is defined\n        if(isNullOrUndefined(module))\n        {\n            // ERROR... stop further execution\n            return view;\n        }\n\n        // delete all children only if the view is selected and the children are rendered\n        if(view === module.currentSelectedView)\n        {\n            if(!isNullOrUndefined(view.children))\n            {\n                view.children.forEach((elem) =>\n                    {\n                        this.removeFromModules(elem);\n                    }\n                );\n            }\n        }\n\n        // check if module has more than one view\n        if(module.views.length <= 1)\n        {\n            // get the index of the module in the modules array\n            let moduleIndex:number = this.modules.findIndex((mod) => mod === module);\n\n            // check if the module has been found\n            if(moduleIndex >= 0 && moduleIndex < this.modules.length)\n            {\n                // remove the whole module\n                this.modules.splice(moduleIndex, 1);\n\n                // select the views parent view\n                return view.parent;\n            }\n        }\n        else\n        {\n            // get the index of the view in the module's views array\n            let viewIndex:number = module.views.findIndex((elem) => elem === view);\n\n            // check if the view has been found\n            if(viewIndex >= 0 && viewIndex < module.views.length)\n            {\n                // remove view from module's views array\n                module.views.splice(viewIndex, 1);\n            }\n\n            // return the view that should be selected after deletion\n            if(module.currentSelectedView === view && this.inputConfig.currentSelectedView === view)\n            {\n                return this.getLastSelectedOfModule(module);\n            }\n            else\n            {\n                // check if vertical selection has to be changed\n                if(module.currentSelectedView === view)\n                {\n                    // rebuild modules array depending on the selected view\n                    this.rebuildModules(this.getLastSelectedOfModule(module), module);\n\n                }\n                // do not change anything -> select the currently selected view\n                return this.inputConfig.currentSelectedView;\n            }\n        }\n    }\n\n    protected getModuleOfView(view):TerraMultiSplitViewDetail\n    {\n        // get hierarchy level of deleted view\n        let hierarchyLevel:number = this.getHierarchyLevelOfView(view);\n\n        return this.modules[hierarchyLevel];\n    }\n\n    private getHierarchyLevelOfView(view:TerraMultiSplitViewInterface):number\n    {\n        let hierarchyLevel:number = 0;\n        let parent:TerraMultiSplitViewInterface = view.parent;\n        while(!isNullOrUndefined(parent))\n        {\n            parent = parent.parent;\n            hierarchyLevel++;\n        }\n\n        return hierarchyLevel;\n    }\n\n    private resizeViewAndModule(view:TerraMultiSplitViewInterface):void\n    {\n        let module:TerraMultiSplitViewDetail = this.getModuleOfView(view);\n\n        module.width = view.defaultWidth;\n    }\n\n    private removeView(view:TerraMultiSplitViewInterface, event:Event):void\n    {\n        // stop event bubbling\n        event.stopPropagation();\n\n        // remove the selected view\n        this.inputConfig.removeView(view);\n    }\n\n    private routeExists(route:string):boolean\n    {\n        // get the partials of the route\n        let path:Array<string> = route.split('/');\n\n        // start at element 1 not 0, since the route starts with a separator\n        let routeLevel:number = 1;\n\n        // get the routing config\n        let routes:Routes = this._router.config;\n\n        // scan the routing config\n        while(routeLevel < path.length)\n        {\n            if(isNullOrUndefined(routes))\n            {\n                return false;\n            }\n\n            // search the array for the route partial\n            let foundRoute = routes.find((route) => route.path === path[routeLevel]);\n            if(foundRoute) // the route partial is defined?\n            {\n                // into deep\n                routeLevel++;\n                routes = foundRoute.children;\n            }\n            else\n            {\n                return false;\n            }\n        }\n\n        // if the while loop ends, the route exists\n        return true;\n    }\n\n    private getLastSelectedOfModule(module:TerraMultiSplitViewDetail):TerraMultiSplitViewInterface\n    {\n        if(module.lastSelectedView && module.views.find((v:TerraMultiSplitViewInterface) => v === module.lastSelectedView))\n        {\n            return module.lastSelectedView;\n        }\n\n        // select the first view in the views array\n        return module.views[0];\n    }\n}\n"],"sourceRoot":"/source/"}