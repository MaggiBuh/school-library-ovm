import { Declaration, Symbol, TypeChecker } from 'typescript';
import { FileInfo } from '../services/TsParser/FileInfo';
import { ApiDoc } from './ApiDoc';
import { ModuleDoc } from './ModuleDoc';
/**
 * An export document is an abstraction somewhere between a TypeScript symbol and a declaration depending upon the underlying type.
 * Exported functions can be overloaded and so have one doc per declaration
 * Exported interfaces can have multiple declarations, they would be merged together
 */
export declare abstract class ExportDoc implements ApiDoc {
    moduleDoc: ModuleDoc;
    symbol: Symbol;
    declaration: Declaration;
    basePath: string;
    typeChecker: TypeChecker;
    namespacesToInclude: string[];
    abstract docType: string;
    name: string;
    aliases: string[];
    id: string;
    fileInfo: FileInfo;
    startingLine: number;
    endingLine: number;
    originalModule: any;
    content: string;
    path: string;
    outputPath: string;
    constructor(moduleDoc: ModuleDoc, symbol: Symbol, declaration: Declaration, basePath: string, typeChecker: TypeChecker, namespacesToInclude: string[]);
}
