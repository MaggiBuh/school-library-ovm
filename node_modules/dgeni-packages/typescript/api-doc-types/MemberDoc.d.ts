import { Declaration, Symbol } from 'typescript';
import { FileInfo } from '../services/TsParser/FileInfo';
import { ParsedDecorator } from "../services/TsParser/getDecorators";
import { ApiDoc } from './ApiDoc';
import { ContainerExportDoc } from './ContainerExportDoc';
/**
 * This document represents a member of a ClassLikeExportDoc.
 */
export declare abstract class MemberDoc implements ApiDoc {
    containerDoc: ContainerExportDoc;
    symbol: Symbol;
    declaration: Declaration;
    basePath: string;
    namespacesToInclude: string[];
    isStatic: boolean;
    docType: string;
    abstract name: string;
    abstract id: string;
    abstract aliases: string[];
    abstract anchor: string;
    path: string;
    outputPath: string;
    content: string;
    fileInfo: FileInfo;
    startingLine: number;
    endingLine: number;
    accessibility: string;
    decorators: ParsedDecorator[] | undefined;
    type: string;
    isOptional: boolean;
    isGetAccessor: boolean;
    isSetAccessor: boolean;
    isCallMember: boolean;
    isNewMember: boolean;
    isReadonly: boolean | undefined;
    constructor(containerDoc: ContainerExportDoc, symbol: Symbol, declaration: Declaration, basePath: string, namespacesToInclude: string[], isStatic: boolean);
}
