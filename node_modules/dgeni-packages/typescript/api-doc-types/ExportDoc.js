"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FileInfo_1 = require("../services/TsParser/FileInfo");
var getContent_1 = require("../services/TsParser/getContent");
/**
 * An export document is an abstraction somewhere between a TypeScript symbol and a declaration depending upon the underlying type.
 * Exported functions can be overloaded and so have one doc per declaration
 * Exported interfaces can have multiple declarations, they would be merged together
 */
var ExportDoc = (function () {
    function ExportDoc(moduleDoc, symbol, declaration, basePath, typeChecker, namespacesToInclude) {
        this.moduleDoc = moduleDoc;
        this.symbol = symbol;
        this.declaration = declaration;
        this.basePath = basePath;
        this.typeChecker = typeChecker;
        this.namespacesToInclude = namespacesToInclude;
        this.name = this.symbol.name;
        this.aliases = [this.name, this.moduleDoc.id + "/" + this.name];
        this.id = this.moduleDoc.id + "/" + this.name;
        this.fileInfo = new FileInfo_1.FileInfo(this.declaration, this.basePath);
        this.startingLine = this.fileInfo.location.start.line + (this.fileInfo.location.start.character ? 1 : 0);
        this.endingLine = this.fileInfo.location.end.line;
        this.originalModule = this.fileInfo.projectRelativePath.replace(new RegExp("\." + this.fileInfo.extension + "$"), "");
        this.content = getContent_1.getContent(this.declaration);
    }
    return ExportDoc;
}());
exports.ExportDoc = ExportDoc;
//# sourceMappingURL=ExportDoc.js.map